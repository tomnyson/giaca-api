{"version":3,"sources":["../../../../../node_modules/@babel/helper-compilation-targets/lib/utils.js"],"names":["Object","value","exports","_semver","require","_helperValidatorOption","_targets","versionRegExp","v","first","split","version","unreleasedLabel","hasUnreleased","item","a","semverMin","getLowestUnreleased","result","plugin","environment"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semverMin = semverMin;\nexports.semverify = semverify;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.getHighestUnreleased = getHighestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\n\nvar _semver = require(\"semver\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _targets = require(\"./targets\");\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction semverMin(first, second) {\n  return first && _semver.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.valid(version)) {\n    return version;\n  }\n\n  v.invariant(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);\n\n  if (hasUnreleased) {\n    return a === hasUnreleased ? b : a || b;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getHighestUnreleased(a, b, env) {\n  return getLowestUnreleased(a, b, env) === a ? b : a;\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}"],"file":"utils.js"}