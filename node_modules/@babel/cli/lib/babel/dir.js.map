{"version":3,"sources":["../../../../../../node_modules/@babel/cli/lib/babel/dir.js"],"names":["Object","value","exports","data","require","_slash","_path","_fs","util","info","gen","reject","resolve","Promise","self","args","fn","asyncGeneratorStep","_next","FILE_TYPE","NON_COMPILABLE","COMPILED","IGNORED","ERR_COMPILATION","v","w","process","recursive","_ref","_asyncToGenerator","babelOptions","filenames","cliOptions","_write","relative","dest","getDest","res","sourceFileName","mapLoc","outputFileSync","JSON","console","src","_handleFile","written","write","filename","_handle","stat","dirname","count","files","handleFile","compiledFiles","startTime","logSuccess","diff","Math","handle","chokidar","watcher","persistent","ignoreInitial","awaitWriteFinish","stabilityThreshold","pollInterval","processing","_ref2"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _slash() {\n  const data = require(\"slash\");\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = require(\"fs\");\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar util = require(\"./util\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst FILE_TYPE = Object.freeze({\n  NON_COMPILABLE: \"NON_COMPILABLE\",\n  COMPILED: \"COMPILED\",\n  IGNORED: \"IGNORED\",\n  ERR_COMPILATION: \"ERR_COMPILATION\"\n});\n\nfunction outputFileSync(filePath, data) {\n  (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"10.12\") ? _fs().mkdirSync : require(\"make-dir\").sync)(_path().dirname(filePath), {\n    recursive: true\n  });\n\n  _fs().writeFileSync(filePath, data);\n}\n\nfunction _default(_x) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator(function* ({\n    cliOptions,\n    babelOptions\n  }) {\n    const filenames = cliOptions.filenames;\n\n    function write(_x2, _x3) {\n      return _write.apply(this, arguments);\n    }\n\n    function _write() {\n      _write = _asyncToGenerator(function* (src, base) {\n        let relative = _path().relative(base, src);\n\n        if (!util.isCompilableExtension(relative, cliOptions.extensions)) {\n          return FILE_TYPE.NON_COMPILABLE;\n        }\n\n        relative = util.withExtension(relative, cliOptions.keepFileExtension ? _path().extname(relative) : cliOptions.outFileExtension);\n        const dest = getDest(relative, base);\n\n        try {\n          const res = yield util.compile(src, Object.assign({}, babelOptions, {\n            sourceFileName: _slash()(_path().relative(dest + \"/..\", src))\n          }));\n          if (!res) return FILE_TYPE.IGNORED;\n\n          if (res.map && babelOptions.sourceMaps && babelOptions.sourceMaps !== \"inline\") {\n            const mapLoc = dest + \".map\";\n            res.code = util.addSourceMappingUrl(res.code, mapLoc);\n            res.map.file = _path().basename(relative);\n            outputFileSync(mapLoc, JSON.stringify(res.map));\n          }\n\n          outputFileSync(dest, res.code);\n          util.chmod(src, dest);\n\n          if (cliOptions.verbose) {\n            console.log(src + \" -> \" + dest);\n          }\n\n          return FILE_TYPE.COMPILED;\n        } catch (err) {\n          if (cliOptions.watch) {\n            console.error(err);\n            return FILE_TYPE.ERR_COMPILATION;\n          }\n\n          throw err;\n        }\n      });\n      return _write.apply(this, arguments);\n    }\n\n    function getDest(filename, base) {\n      if (cliOptions.relative) {\n        return _path().join(base, cliOptions.outDir, filename);\n      }\n\n      return _path().join(cliOptions.outDir, filename);\n    }\n\n    function handleFile(_x4, _x5) {\n      return _handleFile.apply(this, arguments);\n    }\n\n    function _handleFile() {\n      _handleFile = _asyncToGenerator(function* (src, base) {\n        const written = yield write(src, base);\n\n        if (cliOptions.copyFiles && written === FILE_TYPE.NON_COMPILABLE || cliOptions.copyIgnored && written === FILE_TYPE.IGNORED) {\n          const filename = _path().relative(base, src);\n\n          const dest = getDest(filename, base);\n          outputFileSync(dest, _fs().readFileSync(src));\n          util.chmod(src, dest);\n        }\n\n        return written === FILE_TYPE.COMPILED;\n      });\n      return _handleFile.apply(this, arguments);\n    }\n\n    function handle(_x6) {\n      return _handle.apply(this, arguments);\n    }\n\n    function _handle() {\n      _handle = _asyncToGenerator(function* (filenameOrDir) {\n        if (!_fs().existsSync(filenameOrDir)) return 0;\n\n        const stat = _fs().statSync(filenameOrDir);\n\n        if (stat.isDirectory()) {\n          const dirname = filenameOrDir;\n          let count = 0;\n          const files = util.readdir(dirname, cliOptions.includeDotfiles);\n\n          for (const filename of files) {\n            const src = _path().join(dirname, filename);\n\n            const written = yield handleFile(src, dirname);\n            if (written) count += 1;\n          }\n\n          return count;\n        } else {\n          const filename = filenameOrDir;\n          const written = yield handleFile(filename, _path().dirname(filename));\n          return written ? 1 : 0;\n        }\n      });\n      return _handle.apply(this, arguments);\n    }\n\n    let compiledFiles = 0;\n    let startTime = null;\n    const logSuccess = util.debounce(function () {\n      if (startTime === null) {\n        return;\n      }\n\n      const diff = process.hrtime(startTime);\n      console.log(`Successfully compiled ${compiledFiles} ${compiledFiles !== 1 ? \"files\" : \"file\"} with Babel (${diff[0] * 1e3 + Math.round(diff[1] / 1e6)}ms).`);\n      compiledFiles = 0;\n      startTime = null;\n    }, 100);\n\n    if (!cliOptions.skipInitialBuild) {\n      if (cliOptions.deleteDirOnStart) {\n        util.deleteDir(cliOptions.outDir);\n      }\n\n      (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"10.12\") ? _fs().mkdirSync : require(\"make-dir\").sync)(cliOptions.outDir, {\n        recursive: true\n      });\n      startTime = process.hrtime();\n\n      for (const filename of cliOptions.filenames) {\n        compiledFiles += yield handle(filename);\n      }\n\n      if (!cliOptions.quiet) {\n        logSuccess();\n        logSuccess.flush();\n      }\n    }\n\n    if (cliOptions.watch) {\n      const chokidar = util.requireChokidar();\n      filenames.forEach(function (filenameOrDir) {\n        const watcher = chokidar.watch(filenameOrDir, {\n          persistent: true,\n          ignoreInitial: true,\n          awaitWriteFinish: {\n            stabilityThreshold: 50,\n            pollInterval: 10\n          }\n        });\n        let processing = 0;\n        [\"add\", \"change\"].forEach(function (type) {\n          watcher.on(type, function () {\n            var _ref2 = _asyncToGenerator(function* (filename) {\n              processing++;\n              if (startTime === null) startTime = process.hrtime();\n\n              try {\n                yield handleFile(filename, filename === filenameOrDir ? _path().dirname(filenameOrDir) : filenameOrDir);\n                compiledFiles++;\n              } catch (err) {\n                console.error(err);\n              }\n\n              processing--;\n              if (processing === 0 && !cliOptions.quiet) logSuccess();\n            });\n\n            return function (_x7) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n        });\n      });\n    }\n  });\n  return _ref.apply(this, arguments);\n}"],"file":"dir.js"}