{"version":3,"sources":["../../../../../node_modules/@babel/code-frame/lib/index.js"],"names":["Object","value","exports","_highlight","require","deprecationWarningShown","gutter","chalk","marker","message","bold","NEWLINE","startLoc","column","line","loc","endLoc","linesAbove","linesBelow","opts","startLine","startColumn","endLine","endColumn","start","Math","end","source","lineDiff","markerLines","i","lineNumber","sourceLength","highlighted","defs","getDefs","maybeHighlight","chalkFn","lines","rawLines","getMarkerLines","hasColumns","numberMaxWidth","String","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","Array","markerSpacing","numberOfMarkers","process","deprecationError","console","colNumber","location","codeFrameColumns"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}"],"file":"index.js"}