{"version":3,"sources":["../../../../../../../node_modules/@babel/helper-define-polyfill-provider/node_modules/debug/src/node.js"],"names":["tty","require","util","exports","supportsColor","process","key","prop","k","val","Number","obj","Boolean","namespace","useColors","c","colorCode","prefix","args","module","getDate","debug","keys","Object","i","formatters","str"],"mappings":"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","sourcesContent":["/**\n * Module dependencies.\n */\nconst tty = require('tty');\n\nconst util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(() => {}, 'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  const supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n  return /^debug_/i.test(key);\n}).reduce((obj, key) => {\n  // Camel-case\n  const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  let val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  const {\n    namespace: name,\n    useColors\n  } = this;\n\n  if (useColors) {\n    const c = this.color;\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n    const prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log(...args) {\n  return process.stderr.write(util.format(...args) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  const keys = Object.keys(exports.inspectOpts);\n\n  for (let i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nconst {\n  formatters\n} = module.exports;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).split('\\n').map(str => str.trim()).join(' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};"],"file":"node.js"}