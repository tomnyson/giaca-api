{"version":3,"sources":["../../../../../../node_modules/@babel/helper-define-polyfill-provider/node_modules/ms/index.js"],"names":["s","m","h","d","w","y","module","options","type","val","parse","isFinite","fmtLong","fmtShort","JSON","str","String","match","n","parseFloat","msAbs","Math","ms","plural","isPlural"],"mappings":"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","sourcesContent":["/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}"],"file":"index.js"}