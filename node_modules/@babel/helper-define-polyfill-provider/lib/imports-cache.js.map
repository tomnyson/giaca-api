{"version":3,"sources":["../../../../../node_modules/@babel/helper-define-polyfill-provider/lib/imports-cache.js"],"names":["exports","babel","_interopRequireWildcard","require","cache","_getRequireWildcardCache","obj","default","newObj","hasPropertyDescriptor","Object","desc","types","t","constructor","storeAnonymous","key","imports","node","getVal","programPath","storeNamed","name","id","_injectImport","lastImport","_ensure","collection","map","_normalizeKey","sourceType","url"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar babel = _interopRequireWildcard(require(\"@babel/core\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nconst {\n  types: t\n} = babel.default || babel;\n\nclass ImportsCache {\n  constructor(resolver) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n  }\n\n  storeAnonymous(programPath, url, // eslint-disable-next-line no-undef\n  getVal) {\n    const key = this._normalizeKey(programPath, url);\n\n    const imports = this._ensure(this._anonymousImports, programPath, Set);\n\n    if (imports.has(key)) return;\n    const node = getVal(programPath.node.sourceType === \"script\", t.stringLiteral(this._resolver(url)));\n    imports.add(key);\n\n    this._injectImport(programPath, node);\n  }\n\n  storeNamed(programPath, url, name, getVal) {\n    const key = this._normalizeKey(programPath, url, name);\n\n    const imports = this._ensure(this._imports, programPath, Map);\n\n    if (!imports.has(key)) {\n      const {\n        node,\n        name: id\n      } = getVal(programPath.node.sourceType === \"script\", t.stringLiteral(this._resolver(url)), t.identifier(name));\n      imports.set(key, id);\n\n      this._injectImport(programPath, node);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(programPath, node) {\n    let lastImport = this._lastImports.get(programPath);\n\n    if (lastImport && lastImport.node && // Sometimes the AST is modified and the \"last import\"\n    // we have has been replaced\n    lastImport.parent === programPath.node && lastImport.container === programPath.node.body) {\n      lastImport = lastImport.insertAfter(node);\n    } else {\n      lastImport = programPath.unshiftContainer(\"body\", node);\n    }\n\n    lastImport = lastImport[lastImport.length - 1];\n\n    this._lastImports.set(programPath, lastImport);\n    /*\n    let lastImport;\n     programPath.get(\"body\").forEach(path => {\n      if (path.isImportDeclaration()) lastImport = path;\n      if (\n        path.isExpressionStatement() &&\n        isRequireCall(path.get(\"expression\"))\n      ) {\n        lastImport = path;\n      }\n      if (\n        path.isVariableDeclaration() &&\n        path.get(\"declarations\").length === 1 &&\n        (isRequireCall(path.get(\"declarations.0.init\")) ||\n          (path.get(\"declarations.0.init\").isMemberExpression() &&\n            isRequireCall(path.get(\"declarations.0.init.object\"))))\n      ) {\n        lastImport = path;\n      }\n    });*/\n\n  }\n\n  _ensure(map, programPath, Collection) {\n    let collection = map.get(programPath);\n\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n\n    return collection;\n  }\n\n  _normalizeKey(programPath, url, name = \"\") {\n    const {\n      sourceType\n    } = programPath.node; // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n\n    return `${name && sourceType}::${url}::${name}`;\n  }\n\n}\n\nexports.default = ImportsCache;"],"file":"imports-cache.js"}