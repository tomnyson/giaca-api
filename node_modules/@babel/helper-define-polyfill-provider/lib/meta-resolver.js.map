{"version":3,"sources":["../../../../../node_modules/@babel/helper-define-polyfill-provider/lib/meta-resolver.js"],"names":["exports","_utils","require","PossibleGlobalObjects","static","instance","global","globalP","meta","kind","desc","name","key","object","placement","staticP","instanceP"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,OAAAA,GAAAA,kBAAAA;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAApB,SAAoB,CAApB;;AAEA,MAAMC,qBAAqB,GAAG,IAAA,GAAA,CAAQ,CAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAtC,QAAsC,CAAR,CAA9B;;AAEA,SAAA,kBAAA,CAAA,SAAA,EAAuC;AACrC,QAAM;AACJC,IAAAA,MAAM,EADF,OAAA;AAEJC,IAAAA,QAAQ,EAFJ,SAAA;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAAN,SAAA;AAKA,SAAOC,IAAI,IAAI;AACb,QAAIA,IAAI,CAAJA,IAAAA,KAAAA,QAAAA,IAAAA,OAAAA,IAAqC,CAAC,GAAGP,MAAM,CAAV,GAAA,EAAA,OAAA,EAAyBO,IAAI,CAAtE,IAAyC,CAAzC,EAA8E;AAC5E,aAAO;AACLC,QAAAA,IAAI,EADC,QAAA;AAELC,QAAAA,IAAI,EAAEH,OAAO,CAACC,IAAI,CAFb,IAEQ,CAFR;AAGLG,QAAAA,IAAI,EAAEH,IAAI,CAACG;AAHN,OAAP;AAKD;;AAED,QAAIH,IAAI,CAAJA,IAAAA,KAAAA,UAAAA,IAA4BA,IAAI,CAAJA,IAAAA,KAAhC,IAAA,EAAoD;AAClD,YAAM;AAAA,QAAA,SAAA;AAAA,QAAA,MAAA;AAGJI,QAAAA;AAHI,UAAN,IAAA;;AAMA,UAAIC,MAAM,IAAIC,SAAS,KAAvB,QAAA,EAAsC;AACpC,YAAIP,OAAO,IAAIJ,qBAAqB,CAArBA,GAAAA,CAAXI,MAAWJ,CAAXI,IAAgD,CAAC,GAAGN,MAAM,CAAV,GAAA,EAAA,OAAA,EAApD,GAAoD,CAApD,EAAmF;AACjF,iBAAO;AACLQ,YAAAA,IAAI,EADC,QAAA;AAELC,YAAAA,IAAI,EAAEH,OAAO,CAFR,GAEQ,CAFR;AAGLI,YAAAA,IAAI,EAAEC;AAHD,WAAP;AAKD;;AAED,YAAIG,OAAO,IAAI,CAAC,GAAGd,MAAM,CAAV,GAAA,EAAA,OAAA,EAAXc,MAAW,CAAXA,IAA+C,CAAC,GAAGd,MAAM,CAAV,GAAA,EAAgBc,OAAO,CAAvB,MAAuB,CAAvB,EAAnD,GAAmD,CAAnD,EAA0F;AACxF,iBAAO;AACLN,YAAAA,IAAI,EADC,QAAA;AAELC,YAAAA,IAAI,EAAEK,OAAO,CAAPA,MAAO,CAAPA,CAFD,GAECA,CAFD;AAGLJ,YAAAA,IAAI,EAAG,GAAEE,MAAO,IAAGD,GAAI;AAHlB,WAAP;AAKD;AACF;;AAED,UAAII,SAAS,IAAI,CAAC,GAAGf,MAAM,CAAV,GAAA,EAAA,SAAA,EAAjB,GAAiB,CAAjB,EAAkD;AAChD,eAAO;AACLQ,UAAAA,IAAI,EADC,UAAA;AAELC,UAAAA,IAAI,EAAEM,SAAS,CAFV,GAEU,CAFV;AAGLL,UAAAA,IAAI,EAAG,GAAEC,GAAI;AAHR,SAAP;AAKD;AACF;AAzCH,GAAA;AA2CD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = createMetaResolver;\n\nvar _utils = require(\"./utils\");\n\nconst PossibleGlobalObjects = new Set([\"global\", \"globalThis\", \"self\", \"window\"]);\n\nfunction createMetaResolver(polyfills) {\n  const {\n    static: staticP,\n    instance: instanceP,\n    global: globalP\n  } = polyfills;\n  return meta => {\n    if (meta.kind === \"global\" && globalP && (0, _utils.has)(globalP, meta.name)) {\n      return {\n        kind: \"global\",\n        desc: globalP[meta.name],\n        name: meta.name\n      };\n    }\n\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const {\n        placement,\n        object,\n        key\n      } = meta;\n\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && (0, _utils.has)(globalP, key)) {\n          return {\n            kind: \"global\",\n            desc: globalP[key],\n            name: key\n          };\n        }\n\n        if (staticP && (0, _utils.has)(staticP, object) && (0, _utils.has)(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`\n          };\n        }\n      }\n\n      if (instanceP && (0, _utils.has)(instanceP, key)) {\n        return {\n          kind: \"instance\",\n          desc: instanceP[key],\n          name: `${key}`\n        };\n      }\n    }\n  };\n}"],"file":"meta-resolver.js"}