{"version":3,"sources":["../../../../../node_modules/@babel/helper-define-polyfill-provider/lib/index.js"],"names":["exports","_helperPluginUtils","require","_helperCompilationTargets","_interopRequireWildcard","_utils","_importsCache","_interopRequireDefault","_debugUtils","_normalizeOptions","v","deps","_metaResolver","obj","default","cache","_getRequireWildcardCache","newObj","hasPropertyDescriptor","Object","desc","source","target","sourceKeys","i","key","excluded","getTargets","targets","absoluteImports","providerOptions","_objectWithoutPropertiesLoose","method","methodName","JSON","options","shouldInjectPolyfill","targetsOption","targetsObj","Array","browsers","configPath","babelApi","debug","resolveOptions","getUtils","moduleName","depsCache","api","babel","createMetaResolver","polyfillsNames","factory","console","provider","filterPolyfills","shouldInject","compatData","includes","excludes","exclude","debugLog","polyfillsSupport","assertDependency","version","missingDependencies","dep","name","found","mapGetOr","callProvider","utils","traverse","instantiateProvider","createVisitor","visitor","pre","polyfills","providers","missingDeps","_provider$pre","post","_provider$post","filteredTargets","formattedTargets","val","map","getDefault"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = definePolyfillProvider;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperCompilationTargets = _interopRequireWildcard(require(\"@babel/helper-compilation-targets\"));\n\nvar _utils = require(\"./utils\");\n\nvar _importsCache = _interopRequireDefault(require(\"./imports-cache\"));\n\nvar _debugUtils = require(\"./debug-utils\");\n\nvar _normalizeOptions = require(\"./normalize-options\");\n\nvar v = _interopRequireWildcard(require(\"./visitors\"));\n\nvar deps = _interopRequireWildcard(require(\"./node/dependencies\"));\n\nvar _metaResolver = _interopRequireDefault(require(\"./meta-resolver\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst getTargets = _helperCompilationTargets.default.default || _helperCompilationTargets.default;\n\nfunction resolveOptions(options, babelApi) {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports\n  } = options,\n        providerOptions = _objectWithoutPropertiesLoose(options, [\"method\", \"targets\", \"ignoreBrowserslistConfig\", \"configPath\", \"debug\", \"shouldInjectPolyfill\", \"absoluteImports\"]);\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";else if (method === \"entry-global\") methodName = \"entryGlobal\";else if (method === \"usage-pure\") methodName = \"usagePure\";else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(`.method must be one of \"entry-global\", \"usage-global\"` + ` or \"usage-pure\" (received ${JSON.stringify(method)})`);\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(`.include and .exclude are not supported when using the` + ` .shouldInjectPolyfill function.`);\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(`.shouldInjectPolyfill must be a function, or undefined` + ` (received ${JSON.stringify(shouldInjectPolyfill)})`);\n  }\n\n  if (absoluteImports != null && typeof absoluteImports !== \"boolean\" && typeof absoluteImports !== \"string\") {\n    throw new Error(`.absoluteImports must be a boolean, a string, or undefined` + ` (received ${JSON.stringify(absoluteImports)})`);\n  }\n\n  let targets;\n\n  if ( // If any browserslist-related option is specified, fallback to the old\n  // behavior of not using the targets specified in the top-level options.\n  targetsOption || configPath || ignoreBrowserslistConfig) {\n    const targetsObj = typeof targetsOption === \"string\" || Array.isArray(targetsOption) ? {\n      browsers: targetsOption\n    } : targetsOption;\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports != null ? absoluteImports : false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions\n  };\n}\n\nfunction instantiateProvider(factory, options, missingDependencies, dirname, debugLog, babelApi) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports\n  } = resolveOptions(options, babelApi);\n  const getUtils = (0, _utils.createUtilsGetter)(new _importsCache.default(moduleName => deps.resolve(dirname, moduleName, absoluteImports))); // eslint-disable-next-line prefer-const\n\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n  const depsCache = new Map();\n  const api = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver: _metaResolver.default,\n\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(`Internal error in the ${factory.name} provider: ` + `shouldInjectPolyfill() can't be called during initialization.`);\n      }\n\n      if (!polyfillsNames.has(name)) {\n        console.warn(`Internal error in the ${provider.name} provider: ` + `unknown polyfill \"${name}\".`);\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n      let shouldInject = (0, _helperCompilationTargets.isRequired)(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n\n    debug(name) {\n      debugLog().found = true;\n      if (!debug || !name) return;\n      if (debugLog().polyfills.has(provider.name)) return;\n      debugLog().polyfills.set(name, polyfillsSupport && name && polyfillsSupport[name]);\n    },\n\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n      const found = missingDependencies.all ? false : mapGetOr(depsCache, `${name} :: ${dirname}`, () => deps.has(dirname, name));\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    }\n\n  };\n  const provider = factory(api, providerOptions, dirname);\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(`The \"${provider.name || factory.name}\" provider doesn't ` + `support the \"${method}\" polyfilling method.`);\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({\n    include,\n    exclude\n  } = (0, _normalizeOptions.validateIncludeExclude)(provider.name || factory.name, polyfillsNames, providerOptions.include || [], providerOptions.exclude || []));\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n\n    callProvider(payload, path) {\n      const utils = getUtils(path); // $FlowIgnore\n\n      provider[methodName](payload, utils, path);\n    }\n\n  };\n}\n\nfunction definePolyfillProvider(factory) {\n  return (0, _helperPluginUtils.declare)((babelApi, options, dirname) => {\n    babelApi.assertVersion(7);\n    const {\n      traverse\n    } = babelApi;\n    let debugLog;\n    const missingDependencies = (0, _normalizeOptions.applyMissingDependenciesDefaults)(options, babelApi);\n    const {\n      debug,\n      method,\n      targets,\n      provider,\n      callProvider\n    } = instantiateProvider(factory, options, missingDependencies, dirname, () => debugLog, babelApi);\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n    const visitor = provider.visitor ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor]) : createVisitor(callProvider);\n\n    if (debug && debug !== _debugUtils.presetEnvSilentDebugHeader) {\n      console.log(`${provider.name}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${(0, _debugUtils.stringifyTargetsMultiline)(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre() {\n        var _provider$pre;\n\n        debugLog = {\n          polyfills: new Map(),\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set()\n        }; // $FlowIgnore - Flow doesn't support optional calls\n\n        (_provider$pre = provider.pre) == null ? void 0 : _provider$pre.apply(this, arguments);\n      },\n\n      post() {\n        var _provider$post; // $FlowIgnore - Flow doesn't support optional calls\n\n\n        (_provider$post = provider.post) == null ? void 0 : _provider$post.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(method === \"entry-global\" ? debugLog.found ? `Based on your targets, the ${provider.name} polyfill did not add any polyfill.` : `The entry point for the ${provider.name} polyfill has not been found.` : `Based on your code and targets, the ${provider.name} polyfill did not add any polyfill.`);\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(`The ${provider.name} polyfill entry has been replaced with ` + `the following polyfills:`);\n        } else {\n          console.log(`The ${provider.name} polyfill added the following polyfills:`);\n        }\n\n        for (const [name, support] of debugLog.polyfills) {\n          if (support) {\n            const filteredTargets = (0, _helperCompilationTargets.getInclusionReasons)(name, targets, support);\n            const formattedTargets = JSON.stringify(filteredTargets).replace(/,/g, \", \").replace(/^\\{\"/, '{ \"').replace(/\"\\}$/, '\" }');\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      }\n\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n\n  return val;\n}"],"file":"index.js"}