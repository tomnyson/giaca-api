{"version":3,"sources":["../../../../../node_modules/@babel/helper-create-class-features-plugin/lib/misc.js"],"names":["Object","value","exports","_core","require","_helperReplaceSupers","findBareSupers","Super","parentPath","callee","node","referenceVisitor","path","ReferencedIdentifier","state","classNameTDZError","throwNode","classFieldDefinitionEvaluationTDZVisitor","handleClassTDZ","nodes","isDerived","newConstructor","renamer","scope","constructor","bareSupers","isFirst","bareSuper","n","declarations","classBinding","file","computedKey","computedPath","computedNode","ident","id","kind"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.injectInitialization = injectInitialization;\nexports.extractComputedKeys = extractComputedKeys;\n\nvar _core = require(\"@babel/core\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nconst findBareSupers = _core.traverse.visitors.merge([{\n  Super(path) {\n    const {\n      node,\n      parentPath\n    } = path;\n\n    if (parentPath.isCallExpression({\n      callee: node\n    })) {\n      this.push(parentPath);\n    }\n  }\n\n}, _helperReplaceSupers.environmentVisitor]);\n\nconst referenceVisitor = {\n  \"TSTypeAnnotation|TypeAnnotation\"(path) {\n    path.skip();\n  },\n\n  ReferencedIdentifier(path) {\n    if (this.scope.hasOwnBinding(path.node.name)) {\n      this.scope.rename(path.node.name);\n      path.skip();\n    }\n  }\n\n};\n\nfunction handleClassTDZ(path, state) {\n  if (state.classBinding && state.classBinding === path.scope.getBinding(path.node.name)) {\n    const classNameTDZError = state.file.addHelper(\"classNameTDZError\");\n\n    const throwNode = _core.types.callExpression(classNameTDZError, [_core.types.stringLiteral(path.node.name)]);\n\n    path.replaceWith(_core.types.sequenceExpression([throwNode, path.node]));\n    path.skip();\n  }\n}\n\nconst classFieldDefinitionEvaluationTDZVisitor = {\n  ReferencedIdentifier: handleClassTDZ\n};\n\nfunction injectInitialization(path, constructor, nodes, renamer) {\n  if (!nodes.length) return;\n  const isDerived = !!path.node.superClass;\n\n  if (!constructor) {\n    const newConstructor = _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), [], _core.types.blockStatement([]));\n\n    if (isDerived) {\n      newConstructor.params = [_core.types.restElement(_core.types.identifier(\"args\"))];\n      newConstructor.body.body.push(_core.template.statement.ast`super(...args)`);\n    }\n\n    [constructor] = path.get(\"body\").unshiftContainer(\"body\", newConstructor);\n  }\n\n  if (renamer) {\n    renamer(referenceVisitor, {\n      scope: constructor.scope\n    });\n  }\n\n  if (isDerived) {\n    const bareSupers = [];\n    constructor.traverse(findBareSupers, bareSupers);\n    let isFirst = true;\n\n    for (const bareSuper of bareSupers) {\n      if (isFirst) {\n        bareSuper.insertAfter(nodes);\n        isFirst = false;\n      } else {\n        bareSuper.insertAfter(nodes.map(n => _core.types.cloneNode(n)));\n      }\n    }\n  } else {\n    constructor.get(\"body\").unshiftContainer(\"body\", nodes);\n  }\n}\n\nfunction extractComputedKeys(ref, path, computedPaths, file) {\n  const declarations = [];\n  const state = {\n    classBinding: path.node.id && path.scope.getBinding(path.node.id.name),\n    file\n  };\n\n  for (const computedPath of computedPaths) {\n    const computedKey = computedPath.get(\"key\");\n\n    if (computedKey.isReferencedIdentifier()) {\n      handleClassTDZ(computedKey, state);\n    } else {\n      computedKey.traverse(classFieldDefinitionEvaluationTDZVisitor, state);\n    }\n\n    const computedNode = computedPath.node;\n\n    if (!computedKey.isConstantExpression()) {\n      const ident = path.scope.generateUidIdentifierBasedOnNode(computedNode.key);\n      path.scope.push({\n        id: ident,\n        kind: \"let\"\n      });\n      declarations.push(_core.types.expressionStatement(_core.types.assignmentExpression(\"=\", _core.types.cloneNode(ident), computedNode.key)));\n      computedNode.key = _core.types.cloneNode(ident);\n    }\n  }\n\n  return declarations;\n}"],"file":"misc.js"}