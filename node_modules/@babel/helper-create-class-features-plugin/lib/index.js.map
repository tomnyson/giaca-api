{"version":3,"sources":["../../../../../node_modules/@babel/helper-create-class-features-plugin/lib/index.js"],"names":["Object","value","exports","enumerable","get","_misc","_features","_core","require","_helperFunctionName","_helperSplitExportDeclaration","_fields","_decorators","version","v","versionKey","api","assumption","setPublicClassFields","privateFieldsAsProperties","constantSuper","noDocumentAll","loose","explicit","console","pre","visitor","Class","isDecorated","path","props","elements","computedPaths","privateNames","body","name","getName","setName","kind","constructor","innerBinding","ref","privateNamesMap","privateNamesNodes","staticNodes","pureStaticNodes","keysNodes","wrapClass","instanceNodes","prop","wrappedPath","parent","PrivateName","key","node","ExportDefaultDeclaration","decl"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createClassFeaturePlugin = createClassFeaturePlugin;\nObject.defineProperty(exports, \"injectInitialization\", {\n  enumerable: true,\n  get: function () {\n    return _misc.injectInitialization;\n  }\n});\nObject.defineProperty(exports, \"enableFeature\", {\n  enumerable: true,\n  get: function () {\n    return _features.enableFeature;\n  }\n});\nObject.defineProperty(exports, \"FEATURES\", {\n  enumerable: true,\n  get: function () {\n    return _features.FEATURES;\n  }\n});\n\nvar _core = require(\"@babel/core\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _fields = require(\"./fields\");\n\nvar _decorators = require(\"./decorators\");\n\nvar _misc = require(\"./misc\");\n\nvar _features = require(\"./features\");\n\nconst version = \"7.15.4\".split(\".\").reduce((v, x) => v * 1e5 + +x, 0);\nconst versionKey = \"@babel/plugin-class-features/version\";\n\nfunction createClassFeaturePlugin({\n  name,\n  feature,\n  loose,\n  manipulateOptions,\n  api = {\n    assumption: () => void 0\n  }\n}) {\n  const setPublicClassFields = api.assumption(\"setPublicClassFields\");\n  const privateFieldsAsProperties = api.assumption(\"privateFieldsAsProperties\");\n  const constantSuper = api.assumption(\"constantSuper\");\n  const noDocumentAll = api.assumption(\"noDocumentAll\");\n\n  if (loose === true) {\n    const explicit = [];\n\n    if (setPublicClassFields !== undefined) {\n      explicit.push(`\"setPublicClassFields\"`);\n    }\n\n    if (privateFieldsAsProperties !== undefined) {\n      explicit.push(`\"privateFieldsAsProperties\"`);\n    }\n\n    if (explicit.length !== 0) {\n      console.warn(`[${name}]: You are using the \"loose: true\" option and you are` + ` explicitly setting a value for the ${explicit.join(\" and \")}` + ` assumption${explicit.length > 1 ? \"s\" : \"\"}. The \"loose\" option` + ` can cause incompatibilities with the other class features` + ` plugins, so it's recommended that you replace it with the` + ` following top-level option:\\n` + `\\t\"assumptions\": {\\n` + `\\t\\t\"setPublicClassFields\": true,\\n` + `\\t\\t\"privateFieldsAsProperties\": true\\n` + `\\t}`);\n    }\n  }\n\n  return {\n    name,\n    manipulateOptions,\n\n    pre() {\n      (0, _features.enableFeature)(this.file, feature, loose);\n\n      if (!this.file.get(versionKey) || this.file.get(versionKey) < version) {\n        this.file.set(versionKey, version);\n      }\n    },\n\n    visitor: {\n      Class(path, state) {\n        if (this.file.get(versionKey) !== version) return;\n        (0, _features.verifyUsedFeatures)(path, this.file);\n        const loose = (0, _features.isLoose)(this.file, feature);\n        let constructor;\n        const isDecorated = (0, _decorators.hasDecorators)(path.node);\n        const props = [];\n        const elements = [];\n        const computedPaths = [];\n        const privateNames = new Set();\n        const body = path.get(\"body\");\n\n        for (const path of body.get(\"body\")) {\n          (0, _features.verifyUsedFeatures)(path, this.file);\n\n          if ((path.isClassProperty() || path.isClassMethod()) && path.node.computed) {\n            computedPaths.push(path);\n          }\n\n          if (path.isPrivate()) {\n            const {\n              name\n            } = path.node.key.id;\n            const getName = `get ${name}`;\n            const setName = `set ${name}`;\n\n            if (path.isClassPrivateMethod()) {\n              if (path.node.kind === \"get\") {\n                if (privateNames.has(getName) || privateNames.has(name) && !privateNames.has(setName)) {\n                  throw path.buildCodeFrameError(\"Duplicate private field\");\n                }\n\n                privateNames.add(getName).add(name);\n              } else if (path.node.kind === \"set\") {\n                if (privateNames.has(setName) || privateNames.has(name) && !privateNames.has(getName)) {\n                  throw path.buildCodeFrameError(\"Duplicate private field\");\n                }\n\n                privateNames.add(setName).add(name);\n              }\n            } else {\n              if (privateNames.has(name) && !privateNames.has(getName) && !privateNames.has(setName) || privateNames.has(name) && (privateNames.has(getName) || privateNames.has(setName))) {\n                throw path.buildCodeFrameError(\"Duplicate private field\");\n              }\n\n              privateNames.add(name);\n            }\n          }\n\n          if (path.isClassMethod({\n            kind: \"constructor\"\n          })) {\n            constructor = path;\n          } else {\n            elements.push(path);\n\n            if (path.isProperty() || path.isPrivate() || path.isStaticBlock != null && path.isStaticBlock()) {\n              props.push(path);\n            }\n          }\n        }\n\n        if (!props.length && !isDecorated) return;\n        const innerBinding = path.node.id;\n        let ref;\n\n        if (!innerBinding || path.isClassExpression()) {\n          (0, _helperFunctionName.default)(path);\n          ref = path.scope.generateUidIdentifier(\"class\");\n        } else {\n          ref = _core.types.cloneNode(path.node.id);\n        }\n\n        const privateNamesMap = (0, _fields.buildPrivateNamesMap)(props);\n        const privateNamesNodes = (0, _fields.buildPrivateNamesNodes)(privateNamesMap, privateFieldsAsProperties != null ? privateFieldsAsProperties : loose, state);\n        (0, _fields.transformPrivateNamesUsage)(ref, path, privateNamesMap, {\n          privateFieldsAsProperties: privateFieldsAsProperties != null ? privateFieldsAsProperties : loose,\n          noDocumentAll,\n          innerBinding\n        }, state);\n        let keysNodes, staticNodes, instanceNodes, pureStaticNodes, wrapClass;\n\n        if (isDecorated) {\n          staticNodes = pureStaticNodes = keysNodes = [];\n          ({\n            instanceNodes,\n            wrapClass\n          } = (0, _decorators.buildDecoratedClass)(ref, path, elements, this.file));\n        } else {\n          keysNodes = (0, _misc.extractComputedKeys)(ref, path, computedPaths, this.file);\n          ({\n            staticNodes,\n            pureStaticNodes,\n            instanceNodes,\n            wrapClass\n          } = (0, _fields.buildFieldsInitNodes)(ref, path.node.superClass, props, privateNamesMap, state, setPublicClassFields != null ? setPublicClassFields : loose, privateFieldsAsProperties != null ? privateFieldsAsProperties : loose, constantSuper != null ? constantSuper : loose, innerBinding));\n        }\n\n        if (instanceNodes.length > 0) {\n          (0, _misc.injectInitialization)(path, constructor, instanceNodes, (referenceVisitor, state) => {\n            if (isDecorated) return;\n\n            for (const prop of props) {\n              if (prop.node.static) continue;\n              prop.traverse(referenceVisitor, state);\n            }\n          });\n        }\n\n        const wrappedPath = wrapClass(path);\n        wrappedPath.insertBefore([...privateNamesNodes, ...keysNodes]);\n\n        if (staticNodes.length > 0) {\n          wrappedPath.insertAfter(staticNodes);\n        }\n\n        if (pureStaticNodes.length > 0) {\n          wrappedPath.find(parent => parent.isStatement() || parent.isDeclaration()).insertAfter(pureStaticNodes);\n        }\n      },\n\n      PrivateName(path) {\n        if (this.file.get(versionKey) !== version || path.parentPath.isPrivate({\n          key: path.node\n        })) {\n          return;\n        }\n\n        throw path.buildCodeFrameError(`Unknown PrivateName \"${path}\"`);\n      },\n\n      ExportDefaultDeclaration(path) {\n        if (this.file.get(versionKey) !== version) return;\n        const decl = path.get(\"declaration\");\n\n        if (decl.isClassDeclaration() && (0, _decorators.hasDecorators)(decl.node)) {\n          if (decl.node.id) {\n            (0, _helperSplitExportDeclaration.default)(path);\n          } else {\n            decl.node.type = \"ClassExpression\";\n          }\n        }\n      }\n\n    }\n  };\n}"],"file":"index.js"}