{"version":3,"sources":["../../../../../../node_modules/@babel/generator/lib/generators/types.js"],"names":["Object","value","exports","_t","require","_jsesc","isIdentifier","node","props","indent","statement","isAssignmentPattern","elems","len","i","elem","startToken","endToken","JSON","pattern","raw","opts","val","json","topicToken","givenTopicTokenJSON","message"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identifier = Identifier;\nexports.ArgumentPlaceholder = ArgumentPlaceholder;\nexports.SpreadElement = exports.RestElement = RestElement;\nexports.ObjectPattern = exports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.ArrayPattern = exports.ArrayExpression = ArrayExpression;\nexports.RecordExpression = RecordExpression;\nexports.TupleExpression = TupleExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.StringLiteral = StringLiteral;\nexports.BigIntLiteral = BigIntLiteral;\nexports.DecimalLiteral = DecimalLiteral;\nexports.TopicReference = TopicReference;\nexports.PipelineTopicExpression = PipelineTopicExpression;\nexports.PipelineBareFunction = PipelineBareFunction;\nexports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\n\nvar _t = require(\"@babel/types\");\n\nvar _jsesc = require(\"jsesc\");\n\nconst {\n  isAssignmentPattern,\n  isIdentifier\n} = _t;\n\nfunction Identifier(node) {\n  this.exactSource(node.loc, () => {\n    this.word(node.name);\n  });\n}\n\nfunction ArgumentPlaceholder() {\n  this.token(\"?\");\n}\n\nfunction RestElement(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction ObjectExpression(node) {\n  const props = node.properties;\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(\"}\");\n}\n\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  this._methodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    if (isAssignmentPattern(node.value) && isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && isIdentifier(node.key) && isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  this.token(\"[\");\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    } else {\n      this.token(\",\");\n    }\n  }\n\n  this.token(\"]\");\n}\n\nfunction RecordExpression(node) {\n  const props = node.properties;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    throw new Error(`The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(endToken);\n}\n\nfunction TupleExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    }\n  }\n\n  this.token(endToken);\n}\n\nfunction RegExpLiteral(node) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteral() {\n  this.word(\"null\");\n}\n\nfunction NumericLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n\n  if (opts.numbers) {\n    this.number(_jsesc(node.value, opts));\n  } else if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  const val = _jsesc(node.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && {\n    json: true\n  }));\n\n  return this.token(val);\n}\n\nfunction BigIntLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"n\");\n}\n\nfunction DecimalLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"m\");\n}\n\nfunction TopicReference() {\n  const {\n    topicToken\n  } = this.format;\n\n  switch (topicToken) {\n    case \"#\":\n      this.token(\"#\");\n      break;\n\n    default:\n      {\n        const givenTopicTokenJSON = JSON.stringify(topicToken);\n        const message = `The \"topicToken\" generator option must be \"#\" (${givenTopicTokenJSON} received instead).`;\n        throw new Error(message);\n      }\n  }\n}\n\nfunction PipelineTopicExpression(node) {\n  this.print(node.expression, node);\n}\n\nfunction PipelineBareFunction(node) {\n  this.print(node.callee, node);\n}\n\nfunction PipelinePrimaryTopicReference() {\n  this.token(\"#\");\n}"],"file":"types.js"}