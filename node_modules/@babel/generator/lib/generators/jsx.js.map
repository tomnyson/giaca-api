{"version":3,"sources":["../../../../../../node_modules/@babel/generator/lib/generators/jsx.js"],"names":["Object","value","exports","node","raw","open","separator","spaceSeparator"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSXAttribute = JSXAttribute;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\nexports.JSXElement = JSXElement;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\nexports.JSXFragment = JSXFragment;\nexports.JSXOpeningFragment = JSXOpeningFragment;\nexports.JSXClosingFragment = JSXClosingFragment;\n\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n\n  if (node.value) {\n    this.token(\"=\");\n    this.print(node.value, node);\n  }\n}\n\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\n\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.token(\":\");\n  this.print(node.name, node);\n}\n\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction JSXSpreadAttribute(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.argument, node);\n  this.token(\"}\");\n}\n\nfunction JSXExpressionContainer(node) {\n  this.token(\"{\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXSpreadChild(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXText(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (raw != null) {\n    this.token(raw);\n  } else {\n    this.token(node.value);\n  }\n}\n\nfunction JSXElement(node) {\n  const open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingElement, node);\n}\n\nfunction spaceSeparator() {\n  this.space();\n}\n\nfunction JSXOpeningElement(node) {\n  this.token(\"<\");\n  this.print(node.name, node);\n  this.print(node.typeParameters, node);\n\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, {\n      separator: spaceSeparator\n    });\n  }\n\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/>\");\n  } else {\n    this.token(\">\");\n  }\n}\n\nfunction JSXClosingElement(node) {\n  this.token(\"</\");\n  this.print(node.name, node);\n  this.token(\">\");\n}\n\nfunction JSXEmptyExpression(node) {\n  this.printInnerComments(node);\n}\n\nfunction JSXFragment(node) {\n  this.print(node.openingFragment, node);\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingFragment, node);\n}\n\nfunction JSXOpeningFragment() {\n  this.token(\"<\");\n  this.token(\">\");\n}\n\nfunction JSXClosingFragment() {\n  this.token(\"</\");\n  this.token(\">\");\n}"],"file":"jsx.js"}