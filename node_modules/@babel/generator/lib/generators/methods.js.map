{"version":3,"sources":["../../../../../../node_modules/@babel/generator/lib/generators/methods.js"],"names":["Object","value","exports","_t","require","isIdentifier","node","i","parameters","parameter","kind","key","firstParam","hasTypesOrComments","param","_param$leadingComment","_param$trailingCommen"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._params = _params;\nexports._parameters = _parameters;\nexports._param = _param;\nexports._methodHead = _methodHead;\nexports._predicate = _predicate;\nexports._functionHead = _functionHead;\nexports.FunctionDeclaration = exports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isIdentifier\n} = _t;\n\nfunction _params(node) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(node.params, node);\n\n  this.token(\")\");\n  this.print(node.returnType, node);\n}\n\nfunction _parameters(parameters, parent) {\n  for (let i = 0; i < parameters.length; i++) {\n    this._param(parameters[i], parent);\n\n    if (i < parameters.length - 1) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n}\n\nfunction _param(parameter, parent) {\n  this.printJoin(parameter.decorators, parameter);\n  this.print(parameter, parent);\n  if (parameter.optional) this.token(\"?\");\n  this.print(parameter.typeAnnotation, parameter);\n}\n\nfunction _methodHead(node) {\n  const kind = node.kind;\n  const key = node.key;\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this._catchUp(\"start\", key.loc);\n\n    this.word(\"async\");\n    this.space();\n  }\n\n  if (kind === \"method\" || kind === \"init\") {\n    if (node.generator) {\n      this.token(\"*\");\n    }\n  }\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(key, node);\n    this.token(\"]\");\n  } else {\n    this.print(key, node);\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n\n  this._params(node);\n}\n\nfunction _predicate(node) {\n  if (node.predicate) {\n    if (!node.returnType) {\n      this.token(\":\");\n    }\n\n    this.space();\n    this.print(node.predicate, node);\n  }\n}\n\nfunction _functionHead(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  if (node.generator) this.token(\"*\");\n  this.space();\n\n  if (node.id) {\n    this.print(node.id, node);\n  }\n\n  this._params(node);\n\n  this._predicate(node);\n}\n\nfunction FunctionExpression(node) {\n  this._functionHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ArrowFunctionExpression(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  const firstParam = node.params[0];\n\n  if (!this.format.retainLines && !this.format.auxiliaryCommentBefore && !this.format.auxiliaryCommentAfter && node.params.length === 1 && isIdentifier(firstParam) && !hasTypesOrComments(node, firstParam)) {\n    this.print(firstParam, node);\n  } else {\n    this._params(node);\n  }\n\n  this._predicate(node);\n\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction hasTypesOrComments(node, param) {\n  var _param$leadingComment, _param$trailingCommen;\n\n  return !!(node.typeParameters || node.returnType || node.predicate || param.typeAnnotation || param.optional || (_param$leadingComment = param.leadingComments) != null && _param$leadingComment.length || (_param$trailingCommen = param.trailingComments) != null && _param$trailingCommen.length);\n}"],"file":"methods.js"}