{"version":3,"sources":["../../../../../node_modules/@babel/generator/lib/source-map.js"],"names":["Object","value","exports","_sourceMap","require","constructor","get","map","sourceRoot","code","sourceFileName","mapping","getRawMappings","mark","line","name","identifierName","generated","column","generatedColumn","source","filename","original"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sourceMap = require(\"source-map\");\n\nclass SourceMap {\n  constructor(opts, code) {\n    this._cachedMap = void 0;\n    this._code = void 0;\n    this._opts = void 0;\n    this._rawMappings = void 0;\n    this._lastGenLine = void 0;\n    this._lastSourceLine = void 0;\n    this._lastSourceColumn = void 0;\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  get() {\n    if (!this._cachedMap) {\n      const map = this._cachedMap = new _sourceMap.SourceMapGenerator({\n        sourceRoot: this._opts.sourceRoot\n      });\n      const code = this._code;\n\n      if (typeof code === \"string\") {\n        map.setSourceContent(this._opts.sourceFileName.replace(/\\\\/g, \"/\"), code);\n      } else if (typeof code === \"object\") {\n        Object.keys(code).forEach(sourceFileName => {\n          map.setSourceContent(sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);\n    }\n\n    return this._cachedMap.toJSON();\n  }\n\n  getRawMappings() {\n    return this._rawMappings.slice();\n  }\n\n  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\\\/g, \"/\"),\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;"],"file":"source-map.js"}