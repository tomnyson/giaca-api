{"version":3,"sources":["../../../../../node_modules/@babel/generator/lib/index.js"],"names":["Object","value","exports","_sourceMap","require","_printer","constructor","opts","format","normalizeOptions","map","generate","auxiliaryCommentBefore","auxiliaryCommentAfter","shouldPrintComment","retainLines","retainFunctionParens","comments","compact","minified","concise","indent","adjustMultilineComment","style","base","decoratorsBeforeExport","jsescOption","quotes","wrap","minimal","recordAndTupleSyntaxType","topicToken","code","console","filename","gen"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generate;\nexports.CodeGenerator = void 0;\n\nvar _sourceMap = require(\"./source-map\");\n\nvar _printer = require(\"./printer\");\n\nclass Generator extends _printer.default {\n  constructor(ast, opts = {}, code) {\n    const format = normalizeOptions(code, opts);\n    const map = opts.sourceMaps ? new _sourceMap.default(opts, code) : null;\n    super(format, map);\n    this.ast = void 0;\n    this.ast = ast;\n  }\n\n  generate() {\n    return super.generate(this.ast);\n  }\n\n}\n\nfunction normalizeOptions(code, opts) {\n  const format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    indent: {\n      adjustMultilineComment: true,\n      style: \"  \",\n      base: 0\n    },\n    decoratorsBeforeExport: !!opts.decoratorsBeforeExport,\n    jsescOption: Object.assign({\n      quotes: \"double\",\n      wrap: true,\n      minimal: false\n    }, opts.jsescOption),\n    recordAndTupleSyntaxType: opts.recordAndTupleSyntaxType,\n    topicToken: opts.topicToken\n  };\n  {\n    format.jsonCompatibleStrings = opts.jsonCompatibleStrings;\n  }\n\n  if (format.minified) {\n    format.compact = true;\n\n    format.shouldPrintComment = format.shouldPrintComment || (() => format.comments);\n  } else {\n    format.shouldPrintComment = format.shouldPrintComment || (value => format.comments || value.indexOf(\"@license\") >= 0 || value.indexOf(\"@preserve\") >= 0);\n  }\n\n  if (format.compact === \"auto\") {\n    format.compact = code.length > 500000;\n\n    if (format.compact) {\n      console.error(\"[BABEL] Note: The code generator has deoptimised the styling of \" + `${opts.filename} as it exceeds the max of ${\"500KB\"}.`);\n    }\n  }\n\n  if (format.compact) {\n    format.indent.adjustMultilineComment = false;\n  }\n\n  return format;\n}\n\nclass CodeGenerator {\n  constructor(ast, opts, code) {\n    this._generator = void 0;\n    this._generator = new Generator(ast, opts, code);\n  }\n\n  generate() {\n    return this._generator.generate();\n  }\n\n}\n\nexports.CodeGenerator = CodeGenerator;\n\nfunction generate(ast, opts, code) {\n  const gen = new Generator(ast, opts, code);\n  return gen.generate();\n}"],"file":"index.js"}