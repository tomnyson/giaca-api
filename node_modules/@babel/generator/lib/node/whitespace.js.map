{"version":3,"sources":["../../../../../../node_modules/@babel/generator/lib/node/whitespace.js"],"names":["Object","value","exports","_t","require","isStringLiteral","state","isMemberExpression","isOptionalMemberExpression","crawl","node","isBinary","isAssignmentExpression","isCallExpression","isOptionalCallExpression","isFunction","isIdentifier","isHelper","isLiteral","isObjectExpression","isArrayExpression","nodes","AssignmentExpression","before","after","SwitchCase","parent","LogicalExpression","Literal","CallExpression","OptionalCallExpression","VariableDeclaration","i","declar","enabled","isType","IfStatement","isBlockStatement","_parent$properties","_parent$properties2","_parent$callPropertie","_parent$properties3","_parent$callPropertie2","_parent$indexers","list","decl","ArrayExpression","ObjectExpression","amounts","FLIPPED_ALIAS_KEYS"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.list = exports.nodes = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  FLIPPED_ALIAS_KEYS,\n  isArrayExpression,\n  isAssignmentExpression,\n  isBinary,\n  isBlockStatement,\n  isCallExpression,\n  isFunction,\n  isIdentifier,\n  isLiteral,\n  isMemberExpression,\n  isObjectExpression,\n  isOptionalCallExpression,\n  isOptionalMemberExpression,\n  isStringLiteral\n} = _t;\n\nfunction crawl(node, state = {}) {\n  if (isMemberExpression(node) || isOptionalMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (isCallExpression(node) || isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (isFunction(node)) {\n    state.hasFunction = true;\n  } else if (isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction isHelper(node) {\n  if (isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    return isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return isLiteral(node) || isObjectExpression(node) || isArrayExpression(node) || isIdentifier(node) || isMemberExpression(node);\n}\n\nconst nodes = {\n  AssignmentExpression(node) {\n    const state = crawl(node.right);\n\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  SwitchCase(node, parent) {\n    return {\n      before: !!node.consequent.length || parent.cases[0] === node,\n      after: !node.consequent.length && parent.cases[parent.cases.length - 1] === node\n    };\n  },\n\n  LogicalExpression(node) {\n    if (isFunction(node.left) || isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  Literal(node) {\n    if (isStringLiteral(node) && node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  CallExpression(node) {\n    if (isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  OptionalCallExpression(node) {\n    if (isFunction(node.callee)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  VariableDeclaration(node) {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n\n      if (!enabled) {\n        const state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  IfStatement(node) {\n    if (isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n\n};\nexports.nodes = nodes;\n\nnodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeCallProperty = function (node, parent) {\n  var _parent$properties;\n\n  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) != null && _parent$properties.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeIndexer = function (node, parent) {\n  var _parent$properties2, _parent$callPropertie;\n\n  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) != null && _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) != null && _parent$callPropertie.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (node, parent) {\n  var _parent$properties3, _parent$callPropertie2, _parent$indexers;\n\n  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) != null && _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) != null && _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) != null && _parent$indexers.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nconst list = {\n  VariableDeclaration(node) {\n    return node.declarations.map(decl => decl.init);\n  },\n\n  ArrayExpression(node) {\n    return node.elements;\n  },\n\n  ObjectExpression(node) {\n    return node.properties;\n  }\n\n};\nexports.list = list;\n[[\"Function\", true], [\"Class\", true], [\"Loop\", true], [\"LabeledStatement\", true], [\"SwitchStatement\", true], [\"TryStatement\", true]].forEach(function ([type, amounts]) {\n  if (typeof amounts === \"boolean\") {\n    amounts = {\n      after: amounts,\n      before: amounts\n    };\n  }\n\n  [type].concat(FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    nodes[type] = function () {\n      return amounts;\n    };\n  });\n});"],"file":"whitespace.js"}