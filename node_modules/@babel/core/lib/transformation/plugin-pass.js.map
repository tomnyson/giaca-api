{"version":3,"sources":["../../../../../../node_modules/@babel/core/lib/transformation/plugin-pass.js"],"names":["Object","value","exports","constructor","options","file","set","get","availableHelper","addHelper","addImport","buildCodeFrameError","PluginPass"],"mappings":"AAAA;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7CD;AAGAE,OAAO,CAAPA,OAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,MAAA,UAAA,CAAiB;AACfC,EAAAA,WAAW,CAAA,IAAA,EAAA,GAAA,EAAA,OAAA,EAAqB;AAC9B,SAAA,IAAA,GAAY,IAAZ,GAAY,EAAZ;AACA,SAAA,GAAA,GAAW,KAAX,CAAA;AACA,SAAA,IAAA,GAAY,KAAZ,CAAA;AACA,SAAA,IAAA,GAAY,KAAZ,CAAA;AACA,SAAA,GAAA,GAAW,KAAX,CAAA;AACA,SAAA,QAAA,GAAgB,KAAhB,CAAA;AACA,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,IAAA,GAAYC,OAAO,IAAnB,EAAA;AACA,SAAA,GAAA,GAAWC,IAAI,CAAJA,IAAAA,CAAX,GAAA;AACA,SAAA,QAAA,GAAgBA,IAAI,CAAJA,IAAAA,CAAhB,QAAA;AACD;;AAEDC,EAAAA,GAAG,CAAA,GAAA,EAAA,GAAA,EAAW;AACZ,SAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA;AACD;;AAEDC,EAAAA,GAAG,CAAA,GAAA,EAAM;AACP,WAAO,KAAA,IAAA,CAAA,GAAA,CAAP,GAAO,CAAP;AACD;;AAEDC,EAAAA,eAAe,CAAA,IAAA,EAAA,YAAA,EAAqB;AAClC,WAAO,KAAA,IAAA,CAAA,eAAA,CAAA,IAAA,EAAP,YAAO,CAAP;AACD;;AAEDC,EAAAA,SAAS,CAAA,IAAA,EAAO;AACd,WAAO,KAAA,IAAA,CAAA,SAAA,CAAP,IAAO,CAAP;AACD;;AAEDC,EAAAA,SAAS,GAAG;AACV,WAAO,KAAA,IAAA,CAAP,SAAO,EAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAAA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAoB;AACrC,WAAO,KAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,EAAA,GAAA,EAAP,MAAO,CAAP;AACD;;AArCc;;AAyCjBT,OAAO,CAAPA,OAAAA,GAAAA,UAAAA;AACA;AACEU,EAAAA,UAAU,CAAVA,SAAAA,CAAAA,aAAAA,GAAqC,SAAA,aAAA,GAAyB;AAC5D,WAAO,KAAA,IAAA,CAAP,aAAO,EAAP;AADFA,GAAAA;AAGD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass PluginPass {\n  constructor(file, key, options) {\n    this._map = new Map();\n    this.key = void 0;\n    this.file = void 0;\n    this.opts = void 0;\n    this.cwd = void 0;\n    this.filename = void 0;\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n  }\n\n  set(key, val) {\n    this._map.set(key, val);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  availableHelper(name, versionRange) {\n    return this.file.availableHelper(name, versionRange);\n  }\n\n  addHelper(name) {\n    return this.file.addHelper(name);\n  }\n\n  addImport() {\n    return this.file.addImport();\n  }\n\n  buildCodeFrameError(node, msg, _Error) {\n    return this.file.buildCodeFrameError(node, msg, _Error);\n  }\n\n}\n\nexports.default = PluginPass;\n{\n  PluginPass.prototype.getModuleName = function getModuleName() {\n    return this.file.getModuleName();\n  };\n}"],"file":"plugin-pass.js"}