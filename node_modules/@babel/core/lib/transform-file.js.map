{"version":3,"sources":["../../../../../node_modules/@babel/core/lib/transform-file.js"],"names":["Object","value","exports","data","require","_gensync","_config","_transformation","fs","transformFileRunner","options","filename","config","code","transformFile","transformFileSync","transformFileAsync"],"mappings":"AAAA;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7CD;AAGAE,OAAO,CAAPA,kBAAAA,GAA6BA,OAAO,CAAPA,iBAAAA,GAA4BA,OAAO,CAAPA,aAAAA,GAAwB,KAAjFA,CAAAA;;AAEA,SAAA,QAAA,GAAoB;AAClB,QAAMC,IAAI,GAAGC,OAAO,CAApB,SAAoB,CAApB;;AAEAC,EAAAA,QAAQ,GAAG,YAAY;AACrB,WAAA,IAAA;AADFA,GAAAA;;AAIA,SAAA,IAAA;AACD;;AAED,IAAIC,OAAO,GAAGF,OAAO,CAArB,UAAqB,CAArB;;AAEA,IAAIG,eAAe,GAAGH,OAAO,CAA7B,kBAA6B,CAA7B;;AAEA,IAAII,EAAE,GAAGJ,OAAO,CAAhB,oBAAgB,CAAhB;;AAEA,CAAA,EAAA;;AAEA,MAAMK,mBAAmB,GAAGJ,QAAQ,GAAG,WAAA,QAAA,EAAA,IAAA,EAA2B;AAChE,QAAMK,OAAO,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAA,IAAA,EAAwB;AACtCC,IAAAA;AADsC,GAAxB,CAAhB;AAGA,QAAMC,MAAM,GAAG,OAAO,CAAC,GAAGN,OAAO,CAAX,OAAA,EAAtB,OAAsB,CAAtB;AACA,MAAIM,MAAM,KAAV,IAAA,EAAqB,OAAA,IAAA;AACrB,QAAMC,IAAI,GAAG,OAAOL,EAAE,CAAFA,QAAAA,CAAAA,QAAAA,EAApB,MAAoBA,CAApB;AACA,SAAO,OAAO,CAAC,GAAGD,eAAe,CAAnB,GAAA,EAAA,MAAA,EAAd,IAAc,CAAd;AAPF,CAAoC,CAApC;;AAUA,MAAMO,aAAa,GAAGL,mBAAmB,CAAzC,OAAA;AACAP,OAAO,CAAPA,aAAAA,GAAAA,aAAAA;AACA,MAAMa,iBAAiB,GAAGN,mBAAmB,CAA7C,IAAA;AACAP,OAAO,CAAPA,iBAAAA,GAAAA,iBAAAA;AACA,MAAMc,kBAAkB,GAAGP,mBAAmB,CAA9C,KAAA;AACAP,OAAO,CAAPA,kBAAAA,GAAAA,kBAAAA","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFileAsync = exports.transformFileSync = exports.transformFile = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nvar fs = require(\"./gensync-utils/fs\");\n\n({});\n\nconst transformFileRunner = _gensync()(function* (filename, opts) {\n  const options = Object.assign({}, opts, {\n    filename\n  });\n  const config = yield* (0, _config.default)(options);\n  if (config === null) return null;\n  const code = yield* fs.readFile(filename, \"utf8\");\n  return yield* (0, _transformation.run)(config, code);\n});\n\nconst transformFile = transformFileRunner.errback;\nexports.transformFile = transformFile;\nconst transformFileSync = transformFileRunner.sync;\nexports.transformFileSync = transformFileSync;\nconst transformFileAsync = transformFileRunner.async;\nexports.transformFileAsync = transformFileAsync;"],"file":"transform-file.js"}