{"version":3,"sources":["../../../../../../node_modules/@babel/core/lib/config/printer.js"],"names":["Object","value","exports","data","require","_gensync","ChainFormatter","Programmatic","Config","Formatter","title","type","loc","index","envName","content","opt","pluginDescriptors","d","descriptorToConfig","presetDescriptors","JSON","name","_d$file","constructor","configure","filepath","format","config","output","configs","s","ConfigPrinter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigPrinter = exports.ChainFormatter = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst ChainFormatter = {\n  Programmatic: 0,\n  Config: 1\n};\nexports.ChainFormatter = ChainFormatter;\nconst Formatter = {\n  title(type, callerName, filepath) {\n    let title = \"\";\n\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n\n    return title;\n  },\n\n  loc(index, envName) {\n    let loc = \"\";\n\n    if (index != null) {\n      loc += `.overrides[${index}]`;\n    }\n\n    if (envName != null) {\n      loc += `.env[\"${envName}\"]`;\n    }\n\n    return loc;\n  },\n\n  *optionsAndDescriptors(opt) {\n    const content = Object.assign({}, opt.options);\n    delete content.overrides;\n    delete content.env;\n    const pluginDescriptors = [...(yield* opt.plugins())];\n\n    if (pluginDescriptors.length) {\n      content.plugins = pluginDescriptors.map(d => descriptorToConfig(d));\n    }\n\n    const presetDescriptors = [...(yield* opt.presets())];\n\n    if (presetDescriptors.length) {\n      content.presets = [...presetDescriptors].map(d => descriptorToConfig(d));\n    }\n\n    return JSON.stringify(content, undefined, 2);\n  }\n\n};\n\nfunction descriptorToConfig(d) {\n  var _d$file;\n\n  let name = (_d$file = d.file) == null ? void 0 : _d$file.request;\n\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      name = `[Function: ${d.value.toString().substr(0, 50)} ... ]`;\n    }\n  }\n\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nclass ConfigPrinter {\n  constructor() {\n    this._stack = [];\n  }\n\n  configure(enabled, type, {\n    callerName,\n    filepath\n  }) {\n    if (!enabled) return () => {};\n    return (content, index, envName) => {\n      this._stack.push({\n        type,\n        callerName,\n        filepath,\n        content,\n        index,\n        envName\n      });\n    };\n  }\n\n  static *format(config) {\n    let title = Formatter.title(config.type, config.callerName, config.filepath);\n    const loc = Formatter.loc(config.index, config.envName);\n    if (loc) title += ` ${loc}`;\n    const content = yield* Formatter.optionsAndDescriptors(config.content);\n    return `${title}\\n${content}`;\n  }\n\n  *output() {\n    if (this._stack.length === 0) return \"\";\n    const configs = yield* _gensync().all(this._stack.map(s => ConfigPrinter.format(s)));\n    return configs.join(\"\\n\\n\");\n  }\n\n}\n\nexports.ConfigPrinter = ConfigPrinter;"],"file":"printer.js"}