{"version":3,"sources":["../../../../../../node_modules/@babel/core/lib/config/config-chain.js"],"names":["Object","value","exports","data","require","_path","_debug","_options","_patternToRegex","_printer","_files","_caching","_configDescriptors","debug","chain","buildPresetChainWalker","plugins","dedupDescriptors","presets","options","o","normalizeOptions","files","makeChainWalker","root","preset","loadPresetDescriptors","env","loadPresetEnvDescriptors","overrides","loadPresetOverridesDescriptors","overridesEnv","loadPresetOverridesEnvDescriptors","createLogger","buildRootDescriptors","envName","buildEnvDescriptors","index","buildOverrideDescriptors","buildOverrideEnvDescriptors","programmaticLogger","programmaticChain","loadProgrammaticChain","dirname","context","cwd","programmaticReport","opts","configFile","babelrcRoots","babelrcRootsDirectory","configFileChain","emptyChain","configFileLogger","validatedFile","validateConfigFile","result","loadFileChain","configReport","babelrc","mergeChain","isIgnored","fileChain","pkgData","babelrcLoadEnabled","ignore","config","babelrcFile","ignoreFile","shouldIgnore","validateBabelrcFile","babelrcLogger","babelRcReport","console","x","fileHandling","absoluteRoot","babelrcPatterns","Array","pat","directory","matchPattern","file","filepath","validateExtendFile","input","buildProgrammaticLogger","loadFileChainWalker","loadFileDescriptors","loadFileEnvDescriptors","loadFileOverridesDescriptors","loadFileOverridesEnvDescriptors","buildFileLogger","descriptors","callerName","_context$caller","name","alias","override","flattenedConfigs","rootOpts","configIsApplicable","undefined","envOpts","overrideOps","overrideEnvOpts","only","logger","mergeExtendsChain","mergeChainOpts","target","source","map","item","fnKey","nameMap","desc","acc","configFieldIsApplicable","patterns","matchesPatterns","message","_context$filename","JSON","_context$filename2","pattern","caller"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildRootChain = buildRootChain;\nexports.buildPresetChainWalker = void 0;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = require(\"debug\");\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = require(\"./pattern-to-regex\");\n\nvar _printer = require(\"./printer\");\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nconst debug = _debug()(\"babel:config:config-chain\");\n\nfunction* buildPresetChain(arg, context) {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set()\n  };\n}\n\nconst buildPresetChainWalker = makeChainWalker({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nconst loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));\nconst loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));\nconst loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction* buildRootChain(opts, context) {\n  let configReport, babelRcReport;\n  const programmaticLogger = new _printer.ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain({\n    options: opts,\n    dirname: context.cwd\n  }, context, undefined, programmaticLogger);\n  if (!programmaticChain) return null;\n  const programmaticReport = yield* programmaticLogger.output();\n  let configFile;\n\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);\n  } else if (opts.configFile !== false) {\n    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);\n  }\n\n  let {\n    babelrc,\n    babelrcRoots\n  } = opts;\n  let babelrcRootsDirectory = context.cwd;\n  const configFileChain = emptyChain();\n  const configFileLogger = new _printer.ConfigPrinter();\n\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(validatedFile, context, undefined, configFileLogger);\n    if (!result) return null;\n    configReport = yield* configFileLogger.output();\n\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n\n  if ((babelrc === true || babelrc === undefined) && typeof context.filename === \"string\") {\n    const pkgData = yield* (0, _files.findPackageData)(context.filename);\n\n    if (pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {\n      ({\n        ignore: ignoreFile,\n        config: babelrcFile\n      } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));\n\n      if (ignoreFile) {\n        fileChain.files.add(ignoreFile.filepath);\n      }\n\n      if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n        isIgnored = true;\n      }\n\n      if (babelrcFile && !isIgnored) {\n        const validatedFile = validateBabelrcFile(babelrcFile);\n        const babelrcLogger = new _printer.ConfigPrinter();\n        const result = yield* loadFileChain(validatedFile, context, undefined, babelrcLogger);\n\n        if (!result) {\n          isIgnored = true;\n        } else {\n          babelRcReport = yield* babelrcLogger.output();\n          mergeChain(fileChain, result);\n        }\n      }\n\n      if (babelrcFile && isIgnored) {\n        fileChain.files.add(babelrcFile.filepath);\n      }\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(`Babel configs on \"${context.filename}\" (ascending priority):\\n` + [configReport, babelRcReport, programmaticReport].filter(x => !!x).join(\"\\n\\n\") + \"\\n-----End Babel configs-----\");\n  }\n\n  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files\n  };\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  const absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns];\n  }\n\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\" ? _path().resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"configfile\", file.options)\n}));\nconst validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"babelrcfile\", file.options)\n}));\nconst validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"extendsfile\", file.options)\n}));\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors),\n  env: (input, envName) => buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName),\n  overrides: (input, index) => buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName),\n  createLogger: (input, context, baseLogger) => buildProgrammaticLogger(input, context, baseLogger)\n});\nconst loadFileChainWalker = makeChainWalker({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) => buildFileLogger(file.filepath, context, baseLogger)\n});\n\nfunction* loadFileChain(input, context, files, baseLogger) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n\n  if (chain) {\n    chain.files.add(input.filepath);\n  }\n\n  return chain;\n}\n\nconst loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));\nconst loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));\nconst loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction buildFileLogger(filepath, context, baseLogger) {\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {\n    filepath\n  });\n}\n\nfunction buildRootDescriptors({\n  dirname,\n  options\n}, alias, descriptors) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(_, context, baseLogger) {\n  var _context$caller;\n\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {\n    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name\n  });\n}\n\nfunction buildEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, envName) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index, envName) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  const opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env[\"${envName}\"]`) : null;\n}\n\nfunction makeChainWalker({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger\n}) {\n  return function* (input, context, files = new Set(), baseLogger) {\n    const {\n      dirname\n    } = input;\n    const flattenedConfigs = [];\n    const rootOpts = root(input);\n\n    if (configIsApplicable(rootOpts, dirname, context)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined\n      });\n      const envOpts = env(input, context.envName);\n\n      if (envOpts && configIsApplicable(envOpts, dirname, context)) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n\n        if (configIsApplicable(overrideOps, dirname, context)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined\n          });\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName\n            });\n          }\n        }\n      });\n    }\n\n    if (flattenedConfigs.some(({\n      config: {\n        options: {\n          ignore,\n          only\n        }\n      }\n    }) => shouldIgnore(context, ignore, only, dirname))) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const {\n      config,\n      index,\n      envName\n    } of flattenedConfigs) {\n      if (!(yield* mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger))) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      yield* mergeChainOpts(chain, config);\n    }\n\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {\n  if (opts.extends === undefined) return true;\n  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);\n\n  if (files.has(file)) {\n    throw new Error(`Configuration cycle detected loading ${file.filepath}.\\n` + `File already loaded following the config chain:\\n` + Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"));\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files, baseLogger);\n  files.delete(file);\n  if (!fileChain) return false;\n  mergeChain(chain, fileChain);\n  return true;\n}\n\nfunction mergeChain(target, source) {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction* mergeChainOpts(target, {\n  options,\n  plugins,\n  presets\n}) {\n  target.options.push(options);\n  target.plugins.push(...(yield* plugins()));\n  target.presets.push(...(yield* presets()));\n  return target;\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set()\n  };\n}\n\nfunction normalizeOptions(opts) {\n  const options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  const map = new Map();\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n\n      let desc = nameMap.get(item.name);\n\n      if (!desc) {\n        desc = {\n          value: item\n        };\n        descriptors.push(desc);\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({\n        value: item\n      });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable({\n  options\n}, dirname, context) {\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));\n}\n\nfunction configFieldIsApplicable(context, test, dirname) {\n  const patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname);\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    var _context$filename;\n\n    const message = `No config is applied to \"${(_context$filename = context.filename) != null ? _context$filename : \"(unknown)\"}\" because it matches one of \\`ignore: ${JSON.stringify(ignore)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    var _context$filename2;\n\n    const message = `No config is applied to \"${(_context$filename2 = context.filename) != null ? _context$filename2 : \"(unknown)\"}\" because it fails to match one of \\`only: ${JSON.stringify(only)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname) {\n  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context) {\n  if (typeof pattern === \"function\") {\n    return !!pattern(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}"],"file":"config-chain.js"}