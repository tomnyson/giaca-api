{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/helpers/config-api.js"],"names":["Object","value","exports","data","require","_semver","_","_caching","Context","env","Array","entry","caller","cb","cache","version","async","assertVersion","targets","JSON","makeConfigAPI","assumption","name","makePresetAPI","Number","range","limit","Error","err","code"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeConfigAPI = makeConfigAPI;\nexports.makePresetAPI = makePresetAPI;\nexports.makePluginAPI = makePluginAPI;\n\nfunction _semver() {\n  const data = require(\"semver\");\n\n  _semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _ = require(\"../../\");\n\nvar _caching = require(\"../caching\");\n\nvar Context = require(\"../cache-contexts\");\n\nfunction makeConfigAPI(cache) {\n  const env = value => cache.using(data => {\n    if (typeof value === \"undefined\") return data.envName;\n\n    if (typeof value === \"function\") {\n      return (0, _caching.assertSimpleType)(value(data.envName));\n    }\n\n    if (!Array.isArray(value)) value = [value];\n    return value.some(entry => {\n      if (typeof entry !== \"string\") {\n        throw new Error(\"Unexpected non-string value\");\n      }\n\n      return entry === data.envName;\n    });\n  });\n\n  const caller = cb => cache.using(data => (0, _caching.assertSimpleType)(cb(data.caller)));\n\n  return {\n    version: _.version,\n    cache: cache.simple(),\n    env,\n    async: () => false,\n    caller,\n    assertVersion\n  };\n}\n\nfunction makePresetAPI(cache) {\n  const targets = () => JSON.parse(cache.using(data => JSON.stringify(data.targets)));\n\n  return Object.assign({}, makeConfigAPI(cache), {\n    targets\n  });\n}\n\nfunction makePluginAPI(cache) {\n  const assumption = name => cache.using(data => data.assumptions[name]);\n\n  return Object.assign({}, makePresetAPI(cache), {\n    assumption\n  });\n}\n\nfunction assertVersion(range) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n\n    range = `^${range}.0.0-0`;\n  }\n\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  if (_semver().satisfies(_.version, range)) return;\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    Error.stackTraceLimit = 25;\n  }\n\n  const err = new Error(`Requires Babel \"${range}\", but was loaded with \"${_.version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version: _.version,\n    range\n  });\n}"],"file":"config-api.js"}