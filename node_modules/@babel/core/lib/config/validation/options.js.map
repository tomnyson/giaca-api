{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/validation/options.js"],"names":["Object","value","exports","_plugin","require","_removed","_optionAssertions","ROOT_VALIDATORS","cwd","root","rootMode","configFile","caller","filename","filenameRelative","code","ast","cloneInputAst","envName","assertString","BABELRC_VALIDATORS","babelrc","babelrcRoots","assertBabelrcSearch","NONPRESET_VALIDATORS","extends","ignore","only","targets","browserslistConfigFile","browserslistEnv","COMMON_VALIDATORS","inputSourceMap","presets","plugins","passPerPreset","assumptions","env","overrides","test","include","exclude","retainLines","comments","shouldPrintComment","compact","minified","auxiliaryCommentBefore","auxiliaryCommentAfter","sourceType","wrapPluginVisitorMethod","highlightCode","sourceMaps","sourceMap","sourceFileName","sourceRoot","parserOpts","generatorOpts","assertObject","getModuleId","moduleRoot","moduleIds","moduleId","assumptionsNames","loc","getSource","validateNested","type","source","assertNoDuplicateSourcemap","key","optLoc","name","parent","validator","opts","version","unknownOptErr","has","obj","envLoc","arr","objLoc","overridesLoc","index","lastItem","items","thisItem","e","request","JSON"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.checkNoUnwrappedItemOptionPairs = checkNoUnwrappedItemOptionPairs;\nexports.assumptionsNames = void 0;\n\nvar _plugin = require(\"../plugin\");\n\nvar _removed = require(\"./removed\");\n\nvar _optionAssertions = require(\"./option-assertions\");\n\nconst ROOT_VALIDATORS = {\n  cwd: _optionAssertions.assertString,\n  root: _optionAssertions.assertString,\n  rootMode: _optionAssertions.assertRootMode,\n  configFile: _optionAssertions.assertConfigFileSearch,\n  caller: _optionAssertions.assertCallerMetadata,\n  filename: _optionAssertions.assertString,\n  filenameRelative: _optionAssertions.assertString,\n  code: _optionAssertions.assertBoolean,\n  ast: _optionAssertions.assertBoolean,\n  cloneInputAst: _optionAssertions.assertBoolean,\n  envName: _optionAssertions.assertString\n};\nconst BABELRC_VALIDATORS = {\n  babelrc: _optionAssertions.assertBoolean,\n  babelrcRoots: _optionAssertions.assertBabelrcSearch\n};\nconst NONPRESET_VALIDATORS = {\n  extends: _optionAssertions.assertString,\n  ignore: _optionAssertions.assertIgnoreList,\n  only: _optionAssertions.assertIgnoreList,\n  targets: _optionAssertions.assertTargets,\n  browserslistConfigFile: _optionAssertions.assertConfigFileSearch,\n  browserslistEnv: _optionAssertions.assertString\n};\nconst COMMON_VALIDATORS = {\n  inputSourceMap: _optionAssertions.assertInputSourceMap,\n  presets: _optionAssertions.assertPluginList,\n  plugins: _optionAssertions.assertPluginList,\n  passPerPreset: _optionAssertions.assertBoolean,\n  assumptions: _optionAssertions.assertAssumptions,\n  env: assertEnvSet,\n  overrides: assertOverridesList,\n  test: _optionAssertions.assertConfigApplicableTest,\n  include: _optionAssertions.assertConfigApplicableTest,\n  exclude: _optionAssertions.assertConfigApplicableTest,\n  retainLines: _optionAssertions.assertBoolean,\n  comments: _optionAssertions.assertBoolean,\n  shouldPrintComment: _optionAssertions.assertFunction,\n  compact: _optionAssertions.assertCompact,\n  minified: _optionAssertions.assertBoolean,\n  auxiliaryCommentBefore: _optionAssertions.assertString,\n  auxiliaryCommentAfter: _optionAssertions.assertString,\n  sourceType: _optionAssertions.assertSourceType,\n  wrapPluginVisitorMethod: _optionAssertions.assertFunction,\n  highlightCode: _optionAssertions.assertBoolean,\n  sourceMaps: _optionAssertions.assertSourceMaps,\n  sourceMap: _optionAssertions.assertSourceMaps,\n  sourceFileName: _optionAssertions.assertString,\n  sourceRoot: _optionAssertions.assertString,\n  parserOpts: _optionAssertions.assertObject,\n  generatorOpts: _optionAssertions.assertObject\n};\n{\n  Object.assign(COMMON_VALIDATORS, {\n    getModuleId: _optionAssertions.assertFunction,\n    moduleRoot: _optionAssertions.assertString,\n    moduleIds: _optionAssertions.assertBoolean,\n    moduleId: _optionAssertions.assertString\n  });\n}\nconst assumptionsNames = new Set([\"arrayLikeIsIterable\", \"constantReexports\", \"constantSuper\", \"enumerableModuleMeta\", \"ignoreFunctionLength\", \"ignoreToPrimitiveHint\", \"iterableIsArray\", \"mutableTemplateObject\", \"noClassCalls\", \"noDocumentAll\", \"noIncompleteNsImportDetection\", \"noNewArrows\", \"objectRestNoSymbols\", \"privateFieldsAsProperties\", \"pureGetters\", \"setClassMethods\", \"setComputedProperties\", \"setPublicClassFields\", \"setSpreadProperties\", \"skipForOfIteratorClosing\", \"superIsCallableConstructor\"]);\nexports.assumptionsNames = assumptionsNames;\n\nfunction getSource(loc) {\n  return loc.type === \"root\" ? loc.source : getSource(loc.parent);\n}\n\nfunction validate(type, opts) {\n  return validateNested({\n    type: \"root\",\n    source: type\n  }, opts);\n}\n\nfunction validateNested(loc, opts) {\n  const type = getSource(loc);\n  assertNoDuplicateSourcemap(opts);\n  Object.keys(opts).forEach(key => {\n    const optLoc = {\n      type: \"option\",\n      name: key,\n      parent: loc\n    };\n\n    if (type === \"preset\" && NONPRESET_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in preset options`);\n    }\n\n    if (type !== \"arguments\" && ROOT_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);\n    }\n\n    if (type !== \"arguments\" && type !== \"configfile\" && BABELRC_VALIDATORS[key]) {\n      if (type === \"babelrcfile\" || type === \"extendsfile\") {\n        throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in .babelrc or \"extends\"ed files, only in root programmatic options, ` + `or babel.config.js/config file options`);\n      }\n\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`);\n    }\n\n    const validator = COMMON_VALIDATORS[key] || NONPRESET_VALIDATORS[key] || BABELRC_VALIDATORS[key] || ROOT_VALIDATORS[key] || throwUnknownError;\n    validator(optLoc, opts[key]);\n  });\n  return opts;\n}\n\nfunction throwUnknownError(loc) {\n  const key = loc.name;\n\n  if (_removed.default[key]) {\n    const {\n      message,\n      version = 5\n    } = _removed.default[key];\n    throw new Error(`Using removed Babel ${version} option: ${(0, _optionAssertions.msg)(loc)} - ${message}`);\n  } else {\n    const unknownOptErr = new Error(`Unknown option: ${(0, _optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`);\n    unknownOptErr.code = \"BABEL_UNKNOWN_OPTION\";\n    throw unknownOptErr;\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction assertNoDuplicateSourcemap(opts) {\n  if (has(opts, \"sourceMap\") && has(opts, \"sourceMaps\")) {\n    throw new Error(\".sourceMap is an alias for .sourceMaps, cannot use both\");\n  }\n}\n\nfunction assertEnvSet(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside of another .env block`);\n  }\n\n  const parent = loc.parent;\n  const obj = (0, _optionAssertions.assertObject)(loc, value);\n\n  if (obj) {\n    for (const envName of Object.keys(obj)) {\n      const env = (0, _optionAssertions.assertObject)((0, _optionAssertions.access)(loc, envName), obj[envName]);\n      if (!env) continue;\n      const envLoc = {\n        type: \"env\",\n        name: envName,\n        parent\n      };\n      validateNested(envLoc, env);\n    }\n  }\n\n  return obj;\n}\n\nfunction assertOverridesList(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .env block`);\n  }\n\n  if (loc.parent.type === \"overrides\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);\n  }\n\n  const parent = loc.parent;\n  const arr = (0, _optionAssertions.assertArray)(loc, value);\n\n  if (arr) {\n    for (const [index, item] of arr.entries()) {\n      const objLoc = (0, _optionAssertions.access)(loc, index);\n      const env = (0, _optionAssertions.assertObject)(objLoc, item);\n      if (!env) throw new Error(`${(0, _optionAssertions.msg)(objLoc)} must be an object`);\n      const overridesLoc = {\n        type: \"overrides\",\n        index,\n        parent\n      };\n      validateNested(overridesLoc, env);\n    }\n  }\n\n  return arr;\n}\n\nfunction checkNoUnwrappedItemOptionPairs(items, index, type, e) {\n  if (index === 0) return;\n  const lastItem = items[index - 1];\n  const thisItem = items[index];\n\n  if (lastItem.file && lastItem.options === undefined && typeof thisItem.value === \"object\") {\n    e.message += `\\n- Maybe you meant to use\\n` + `\"${type}s\": [\\n  [\"${lastItem.file.request}\", ${JSON.stringify(thisItem.value, undefined, 2)}]\\n]\\n` + `To be a valid ${type}, its name and options should be wrapped in a pair of brackets`;\n  }\n}"],"file":"options.js"}