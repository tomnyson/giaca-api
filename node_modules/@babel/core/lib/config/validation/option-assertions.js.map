{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/validation/option-assertions.js"],"names":["Object","value","exports","data","require","_helperCompilationTargets","_options","loc","msg","JSON","type","parent","obj","assertObject","propLoc","access","Array","arr","assertArray","assertIgnoreItem","checkValidTest","assertPluginItem","assertPluginTarget","opts","name","browsersLoc","esmodulesLoc","assertBrowsersList","assertBoolean","val","subLoc","key","validTargets","assertBrowserVersion","Math","root","inPreset"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.msg = msg;\nexports.access = access;\nexports.assertRootMode = assertRootMode;\nexports.assertSourceMaps = assertSourceMaps;\nexports.assertCompact = assertCompact;\nexports.assertSourceType = assertSourceType;\nexports.assertCallerMetadata = assertCallerMetadata;\nexports.assertInputSourceMap = assertInputSourceMap;\nexports.assertString = assertString;\nexports.assertFunction = assertFunction;\nexports.assertBoolean = assertBoolean;\nexports.assertObject = assertObject;\nexports.assertArray = assertArray;\nexports.assertIgnoreList = assertIgnoreList;\nexports.assertConfigApplicableTest = assertConfigApplicableTest;\nexports.assertConfigFileSearch = assertConfigFileSearch;\nexports.assertBabelrcSearch = assertBabelrcSearch;\nexports.assertPluginList = assertPluginList;\nexports.assertTargets = assertTargets;\nexports.assertAssumptions = assertAssumptions;\n\nfunction _helperCompilationTargets() {\n  const data = require(\"@babel/helper-compilation-targets\");\n\n  _helperCompilationTargets = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./options\");\n\nfunction msg(loc) {\n  switch (loc.type) {\n    case \"root\":\n      return ``;\n\n    case \"env\":\n      return `${msg(loc.parent)}.env[\"${loc.name}\"]`;\n\n    case \"overrides\":\n      return `${msg(loc.parent)}.overrides[${loc.index}]`;\n\n    case \"option\":\n      return `${msg(loc.parent)}.${loc.name}`;\n\n    case \"access\":\n      return `${msg(loc.parent)}[${JSON.stringify(loc.name)}]`;\n\n    default:\n      throw new Error(`Assertion failure: Unknown type ${loc.type}`);\n  }\n}\n\nfunction access(loc, name) {\n  return {\n    type: \"access\",\n    name,\n    parent: loc\n  };\n}\n\nfunction assertRootMode(loc, value) {\n  if (value !== undefined && value !== \"root\" && value !== \"upward\" && value !== \"upward-optional\") {\n    throw new Error(`${msg(loc)} must be a \"root\", \"upward\", \"upward-optional\" or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertSourceMaps(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"inline\" && value !== \"both\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"inline\", \"both\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertCompact(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"auto\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"auto\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertSourceType(loc, value) {\n  if (value !== undefined && value !== \"module\" && value !== \"script\" && value !== \"unambiguous\") {\n    throw new Error(`${msg(loc)} must be \"module\", \"script\", \"unambiguous\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertCallerMetadata(loc, value) {\n  const obj = assertObject(loc, value);\n\n  if (obj) {\n    if (typeof obj.name !== \"string\") {\n      throw new Error(`${msg(loc)} set but does not contain \"name\" property string`);\n    }\n\n    for (const prop of Object.keys(obj)) {\n      const propLoc = access(loc, prop);\n      const value = obj[prop];\n\n      if (value != null && typeof value !== \"boolean\" && typeof value !== \"string\" && typeof value !== \"number\") {\n        throw new Error(`${msg(propLoc)} must be null, undefined, a boolean, a string, or a number.`);\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction assertInputSourceMap(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && (typeof value !== \"object\" || !value)) {\n    throw new Error(`${msg(loc)} must be a boolean, object, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertString(loc, value) {\n  if (value !== undefined && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a string, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertFunction(loc, value) {\n  if (value !== undefined && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a function, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertBoolean(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\") {\n    throw new Error(`${msg(loc)} must be a boolean, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertObject(loc, value) {\n  if (value !== undefined && (typeof value !== \"object\" || Array.isArray(value) || !value)) {\n    throw new Error(`${msg(loc)} must be an object, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertArray(loc, value) {\n  if (value != null && !Array.isArray(value)) {\n    throw new Error(`${msg(loc)} must be an array, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertIgnoreList(loc, value) {\n  const arr = assertArray(loc, value);\n\n  if (arr) {\n    arr.forEach((item, i) => assertIgnoreItem(access(loc, i), item));\n  }\n\n  return arr;\n}\n\nfunction assertIgnoreItem(loc, value) {\n  if (typeof value !== \"string\" && typeof value !== \"function\" && !(value instanceof RegExp)) {\n    throw new Error(`${msg(loc)} must be an array of string/Function/RegExp values, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertConfigApplicableTest(loc, value) {\n  if (value === undefined) return value;\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(`${msg(loc)} must be a string/Function/RegExp, or an array of those`);\n  }\n\n  return value;\n}\n\nfunction checkValidTest(value) {\n  return typeof value === \"string\" || typeof value === \"function\" || value instanceof RegExp;\n}\n\nfunction assertConfigFileSearch(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string, ` + `got ${JSON.stringify(value)}`);\n  }\n\n  return value;\n}\n\nfunction assertBabelrcSearch(loc, value) {\n  if (value === undefined || typeof value === \"boolean\") return value;\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string/Function/RegExp ` + `or an array of those, got ${JSON.stringify(value)}`);\n  }\n\n  return value;\n}\n\nfunction assertPluginList(loc, value) {\n  const arr = assertArray(loc, value);\n\n  if (arr) {\n    arr.forEach((item, i) => assertPluginItem(access(loc, i), item));\n  }\n\n  return arr;\n}\n\nfunction assertPluginItem(loc, value) {\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      throw new Error(`${msg(loc)} must include an object`);\n    }\n\n    if (value.length > 3) {\n      throw new Error(`${msg(loc)} may only be a two-tuple or three-tuple`);\n    }\n\n    assertPluginTarget(access(loc, 0), value[0]);\n\n    if (value.length > 1) {\n      const opts = value[1];\n\n      if (opts !== undefined && opts !== false && (typeof opts !== \"object\" || Array.isArray(opts) || opts === null)) {\n        throw new Error(`${msg(access(loc, 1))} must be an object, false, or undefined`);\n      }\n    }\n\n    if (value.length === 3) {\n      const name = value[2];\n\n      if (name !== undefined && typeof name !== \"string\") {\n        throw new Error(`${msg(access(loc, 2))} must be a string, or undefined`);\n      }\n    }\n  } else {\n    assertPluginTarget(loc, value);\n  }\n\n  return value;\n}\n\nfunction assertPluginTarget(loc, value) {\n  if ((typeof value !== \"object\" || !value) && typeof value !== \"string\" && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a string, object, function`);\n  }\n\n  return value;\n}\n\nfunction assertTargets(loc, value) {\n  if ((0, _helperCompilationTargets().isBrowsersQueryValid)(value)) return value;\n\n  if (typeof value !== \"object\" || !value || Array.isArray(value)) {\n    throw new Error(`${msg(loc)} must be a string, an array of strings or an object`);\n  }\n\n  const browsersLoc = access(loc, \"browsers\");\n  const esmodulesLoc = access(loc, \"esmodules\");\n  assertBrowsersList(browsersLoc, value.browsers);\n  assertBoolean(esmodulesLoc, value.esmodules);\n\n  for (const key of Object.keys(value)) {\n    const val = value[key];\n    const subLoc = access(loc, key);\n    if (key === \"esmodules\") assertBoolean(subLoc, val);else if (key === \"browsers\") assertBrowsersList(subLoc, val);else if (!Object.hasOwnProperty.call(_helperCompilationTargets().TargetNames, key)) {\n      const validTargets = Object.keys(_helperCompilationTargets().TargetNames).join(\", \");\n      throw new Error(`${msg(subLoc)} is not a valid target. Supported targets are ${validTargets}`);\n    } else assertBrowserVersion(subLoc, val);\n  }\n\n  return value;\n}\n\nfunction assertBrowsersList(loc, value) {\n  if (value !== undefined && !(0, _helperCompilationTargets().isBrowsersQueryValid)(value)) {\n    throw new Error(`${msg(loc)} must be undefined, a string or an array of strings`);\n  }\n}\n\nfunction assertBrowserVersion(loc, value) {\n  if (typeof value === \"number\" && Math.round(value) === value) return;\n  if (typeof value === \"string\") return;\n  throw new Error(`${msg(loc)} must be a string or an integer number`);\n}\n\nfunction assertAssumptions(loc, value) {\n  if (value === undefined) return;\n\n  if (typeof value !== \"object\" || value === null) {\n    throw new Error(`${msg(loc)} must be an object or undefined.`);\n  }\n\n  let root = loc;\n\n  do {\n    root = root.parent;\n  } while (root.type !== \"root\");\n\n  const inPreset = root.source === \"preset\";\n\n  for (const name of Object.keys(value)) {\n    const subLoc = access(loc, name);\n\n    if (!_options.assumptionsNames.has(name)) {\n      throw new Error(`${msg(subLoc)} is not a supported assumption.`);\n    }\n\n    if (typeof value[name] !== \"boolean\") {\n      throw new Error(`${msg(subLoc)} must be a boolean.`);\n    }\n\n    if (inPreset && value[name] === false) {\n      throw new Error(`${msg(subLoc)} cannot be set to 'false' inside presets.`);\n    }\n  }\n\n  return value;\n}"],"file":"option-assertions.js"}