{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/files/plugins.js"],"names":["Object","value","exports","data","require","_debug","_path","_moduleTypes","_module","debug","EXACT_RE","BABEL_PLUGIN_PREFIX_RE","BABEL_PRESET_PREFIX_RE","BABEL_PLUGIN_ORG_RE","BABEL_PRESET_ORG_RE","OTHER_PLUGIN_ORG_RE","OTHER_PRESET_ORG_RE","OTHER_ORG_DEFAULT_RE","resolveStandardizedName","filepath","resolvePlugin","name","requireModule","resolvePreset","isPreset","type","dirname","process","standardizedName","standardizeName","v","w","paths","M","f","e","resolvedOriginal","resolvedBabel","resolvedOppositeType","oppositeType","LOADING_MODULES","err","message"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvePlugin = resolvePlugin;\nexports.resolvePreset = resolvePreset;\nexports.loadPlugin = loadPlugin;\nexports.loadPreset = loadPreset;\n\nfunction _debug() {\n  const data = require(\"debug\");\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _moduleTypes = require(\"./module-types\");\n\nfunction _module() {\n  const data = require(\"module\");\n\n  _module = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst debug = _debug()(\"babel:config:loading:files:plugins\");\n\nconst EXACT_RE = /^module:/;\nconst BABEL_PLUGIN_PREFIX_RE = /^(?!@|module:|[^/]+\\/|babel-plugin-)/;\nconst BABEL_PRESET_PREFIX_RE = /^(?!@|module:|[^/]+\\/|babel-preset-)/;\nconst BABEL_PLUGIN_ORG_RE = /^(@babel\\/)(?!plugin-|[^/]+\\/)/;\nconst BABEL_PRESET_ORG_RE = /^(@babel\\/)(?!preset-|[^/]+\\/)/;\nconst OTHER_PLUGIN_ORG_RE = /^(@(?!babel\\/)[^/]+\\/)(?![^/]*babel-plugin(?:-|\\/|$)|[^/]+\\/)/;\nconst OTHER_PRESET_ORG_RE = /^(@(?!babel\\/)[^/]+\\/)(?![^/]*babel-preset(?:-|\\/|$)|[^/]+\\/)/;\nconst OTHER_ORG_DEFAULT_RE = /^(@(?!babel$)[^/]+)$/;\n\nfunction resolvePlugin(name, dirname) {\n  return resolveStandardizedName(\"plugin\", name, dirname);\n}\n\nfunction resolvePreset(name, dirname) {\n  return resolveStandardizedName(\"preset\", name, dirname);\n}\n\nfunction* loadPlugin(name, dirname) {\n  const filepath = resolvePlugin(name, dirname);\n\n  if (!filepath) {\n    throw new Error(`Plugin ${name} not found relative to ${dirname}`);\n  }\n\n  const value = yield* requireModule(\"plugin\", filepath);\n  debug(\"Loaded plugin %o from %o.\", name, dirname);\n  return {\n    filepath,\n    value\n  };\n}\n\nfunction* loadPreset(name, dirname) {\n  const filepath = resolvePreset(name, dirname);\n\n  if (!filepath) {\n    throw new Error(`Preset ${name} not found relative to ${dirname}`);\n  }\n\n  const value = yield* requireModule(\"preset\", filepath);\n  debug(\"Loaded preset %o from %o.\", name, dirname);\n  return {\n    filepath,\n    value\n  };\n}\n\nfunction standardizeName(type, name) {\n  if (_path().isAbsolute(name)) return name;\n  const isPreset = type === \"preset\";\n  return name.replace(isPreset ? BABEL_PRESET_PREFIX_RE : BABEL_PLUGIN_PREFIX_RE, `babel-${type}-`).replace(isPreset ? BABEL_PRESET_ORG_RE : BABEL_PLUGIN_ORG_RE, `$1${type}-`).replace(isPreset ? OTHER_PRESET_ORG_RE : OTHER_PLUGIN_ORG_RE, `$1babel-${type}-`).replace(OTHER_ORG_DEFAULT_RE, `$1/babel-${type}`).replace(EXACT_RE, \"\");\n}\n\nfunction resolveStandardizedName(type, name, dirname = process.cwd()) {\n  const standardizedName = standardizeName(type, name);\n\n  try {\n    return (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"8.9\") ? require.resolve : (r, {\n      paths: [b]\n    }, M = require(\"module\")) => {\n      let f = M._findPath(r, M._nodeModulePaths(b).concat(b));\n\n      if (f) return f;\n      f = new Error(`Cannot resolve module '${r}'`);\n      f.code = \"MODULE_NOT_FOUND\";\n      throw f;\n    })(standardizedName, {\n      paths: [dirname]\n    });\n  } catch (e) {\n    if (e.code !== \"MODULE_NOT_FOUND\") throw e;\n\n    if (standardizedName !== name) {\n      let resolvedOriginal = false;\n\n      try {\n        (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"8.9\") ? require.resolve : (r, {\n          paths: [b]\n        }, M = require(\"module\")) => {\n          let f = M._findPath(r, M._nodeModulePaths(b).concat(b));\n\n          if (f) return f;\n          f = new Error(`Cannot resolve module '${r}'`);\n          f.code = \"MODULE_NOT_FOUND\";\n          throw f;\n        })(name, {\n          paths: [dirname]\n        });\n        resolvedOriginal = true;\n      } catch (_unused) {}\n\n      if (resolvedOriginal) {\n        e.message += `\\n- If you want to resolve \"${name}\", use \"module:${name}\"`;\n      }\n    }\n\n    let resolvedBabel = false;\n\n    try {\n      (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"8.9\") ? require.resolve : (r, {\n        paths: [b]\n      }, M = require(\"module\")) => {\n        let f = M._findPath(r, M._nodeModulePaths(b).concat(b));\n\n        if (f) return f;\n        f = new Error(`Cannot resolve module '${r}'`);\n        f.code = \"MODULE_NOT_FOUND\";\n        throw f;\n      })(standardizeName(type, \"@babel/\" + name), {\n        paths: [dirname]\n      });\n      resolvedBabel = true;\n    } catch (_unused2) {}\n\n    if (resolvedBabel) {\n      e.message += `\\n- Did you mean \"@babel/${name}\"?`;\n    }\n\n    let resolvedOppositeType = false;\n    const oppositeType = type === \"preset\" ? \"plugin\" : \"preset\";\n\n    try {\n      (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"8.9\") ? require.resolve : (r, {\n        paths: [b]\n      }, M = require(\"module\")) => {\n        let f = M._findPath(r, M._nodeModulePaths(b).concat(b));\n\n        if (f) return f;\n        f = new Error(`Cannot resolve module '${r}'`);\n        f.code = \"MODULE_NOT_FOUND\";\n        throw f;\n      })(standardizeName(oppositeType, name), {\n        paths: [dirname]\n      });\n      resolvedOppositeType = true;\n    } catch (_unused3) {}\n\n    if (resolvedOppositeType) {\n      e.message += `\\n- Did you accidentally pass a ${oppositeType} as a ${type}?`;\n    }\n\n    throw e;\n  }\n}\n\nconst LOADING_MODULES = new Set();\n\nfunction* requireModule(type, name) {\n  if (LOADING_MODULES.has(name)) {\n    throw new Error(`Reentrant ${type} detected trying to load \"${name}\". This module is not ignored ` + \"and is trying to load itself while compiling itself, leading to a dependency cycle. \" + 'We recommend adding it to your \"ignore\" list in your babelrc, or to a .babelignore.');\n  }\n\n  try {\n    LOADING_MODULES.add(name);\n    return yield* (0, _moduleTypes.default)(name, `You appear to be using a native ECMAScript module ${type}, ` + \"which is only supported when running Babel asynchronously.\", true);\n  } catch (err) {\n    err.message = `[BABEL]: ${err.message} (While processing: ${name})`;\n    throw err;\n  } finally {\n    LOADING_MODULES.delete(name);\n  }\n}"],"file":"plugins.js"}