{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/files/package.js"],"names":["Object","value","exports","data","require","_path","_utils","PACKAGE_FILENAME","pkg","directories","isPackage","dirname","readConfigPackage","nextLoc","options","JSON","err","filepath","Array"],"mappings":"AAAA;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7CD;AAGAE,OAAO,CAAPA,eAAAA,GAAAA,eAAAA;;AAEA,SAAA,KAAA,GAAiB;AACf,QAAMC,IAAI,GAAGC,OAAO,CAApB,MAAoB,CAApB;;AAEAC,EAAAA,KAAK,GAAG,YAAY;AAClB,WAAA,IAAA;AADFA,GAAAA;;AAIA,SAAA,IAAA;AACD;;AAED,IAAIC,MAAM,GAAGF,OAAO,CAApB,SAAoB,CAApB;;AAEA,MAAMG,gBAAgB,GAAtB,cAAA;;AAEA,UAAA,eAAA,CAAA,QAAA,EAAoC;AAClC,MAAIC,GAAG,GAAP,IAAA;AACA,QAAMC,WAAW,GAAjB,EAAA;AACA,MAAIC,SAAS,GAAb,IAAA;;AAEA,MAAIC,OAAO,GAAGN,KAAK,GAALA,OAAAA,CAAd,QAAcA,CAAd;;AAEA,SAAO,CAAA,GAAA,IAAQA,KAAK,GAALA,QAAAA,CAAAA,OAAAA,MAAf,cAAA,EAA6D;AAC3DI,IAAAA,WAAW,CAAXA,IAAAA,CAAAA,OAAAA;AACAD,IAAAA,GAAG,GAAG,OAAOI,iBAAiB,CAACP,KAAK,GAALA,IAAAA,CAAAA,OAAAA,EAA/BG,gBAA+BH,CAAD,CAA9BG;;AAEA,UAAMK,OAAO,GAAGR,KAAK,GAALA,OAAAA,CAAhB,OAAgBA,CAAhB;;AAEA,QAAIM,OAAO,KAAX,OAAA,EAAyB;AACvBD,MAAAA,SAAS,GAATA,KAAAA;AACA;AACD;;AAEDC,IAAAA,OAAO,GAAPA,OAAAA;AACD;;AAED,SAAO;AAAA,IAAA,QAAA;AAAA,IAAA,WAAA;AAAA,IAAA,GAAA;AAILD,IAAAA;AAJK,GAAP;AAMD;;AAED,MAAME,iBAAiB,GAAG,CAAC,GAAGN,MAAM,CAAV,mBAAA,EAAgC,CAAA,QAAA,EAAA,OAAA,KAAuB;AAC/E,MAAA,OAAA;;AAEA,MAAI;AACFQ,IAAAA,OAAO,GAAGC,IAAI,CAAJA,KAAAA,CAAVD,OAAUC,CAAVD;AADF,GAAA,CAEE,OAAA,GAAA,EAAY;AACZE,IAAAA,GAAG,CAAHA,OAAAA,GAAe,GAAEC,QAAS,gCAA+BD,GAAG,CAA5DA,OAAAA,EAAAA;AACA,UAAA,GAAA;AACD;;AAED,MAAI,CAAJ,OAAA,EAAc,MAAM,IAAA,KAAA,CAAW,GAAjB,QAAA,sBAAM,CAAN;;AAEd,MAAI,OAAA,OAAA,KAAJ,QAAA,EAAiC;AAC/B,UAAM,IAAA,KAAA,CAAW,GAAEC,QAAS,4BAA2B,OAAvD,OAAA,EAAM,CAAN;AACD;;AAED,MAAIC,KAAK,CAALA,OAAAA,CAAJ,OAAIA,CAAJ,EAA4B;AAC1B,UAAM,IAAA,KAAA,CAAW,GAAjB,QAAA,0CAAM,CAAN;AACD;;AAED,SAAO;AAAA,IAAA,QAAA;AAELP,IAAAA,OAAO,EAAEN,KAAK,GAALA,OAAAA,CAFJ,QAEIA,CAFJ;AAGLS,IAAAA;AAHK,GAAP;AApBF,CAA0B,CAA1B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findPackageData = findPackageData;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require(\"./utils\");\n\nconst PACKAGE_FILENAME = \"package.json\";\n\nfunction* findPackageData(filepath) {\n  let pkg = null;\n  const directories = [];\n  let isPackage = true;\n\n  let dirname = _path().dirname(filepath);\n\n  while (!pkg && _path().basename(dirname) !== \"node_modules\") {\n    directories.push(dirname);\n    pkg = yield* readConfigPackage(_path().join(dirname, PACKAGE_FILENAME));\n\n    const nextLoc = _path().dirname(dirname);\n\n    if (dirname === nextLoc) {\n      isPackage = false;\n      break;\n    }\n\n    dirname = nextLoc;\n  }\n\n  return {\n    filepath,\n    directories,\n    pkg,\n    isPackage\n  };\n}\n\nconst readConfigPackage = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  let options;\n\n  try {\n    options = JSON.parse(content);\n  } catch (err) {\n    err.message = `${filepath}: Error while parsing JSON - ${err.message}`;\n    throw err;\n  }\n\n  if (!options) throw new Error(`${filepath}: No config detected`);\n\n  if (typeof options !== \"object\") {\n    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);\n  }\n\n  if (Array.isArray(options)) {\n    throw new Error(`${filepath}: Expected config object but found array`);\n  }\n\n  return {\n    filepath,\n    dirname: _path().dirname(filepath),\n    options\n  };\n});"],"file":"package.js"}