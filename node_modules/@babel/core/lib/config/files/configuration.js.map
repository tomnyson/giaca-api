{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/files/configuration.js"],"names":["Object","value","exports","data","require","_debug","_fs","_path","_json","_gensync","_caching","_configApi","_utils","_moduleTypes","_patternToRegex","fs","_module","debug","ROOT_CONFIG_FILENAMES","RELATIVE_CONFIG_FILENAMES","BABELIGNORE_FILENAME","dirname","nextDir","config","ignore","packageData","loadOneConfig","_packageData$pkg","packageToBabelConfig","ignoreLoc","readIgnoreConfig","previousConfig","configs","names","filename","readConfig","filepath","v","w","process","paths","M","f","conf","ext","readConfigJS","caller","readConfigJSON5","LOADING_CONFIGS","cache","options","err","assertCache","Array","throwConfigError","file","babel","ignoreDir","ignorePatterns","content","line","pattern","targetPath","absolutePath","stats"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.resolveShowConfigPath = resolveShowConfigPath;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction _debug() {\n  const data = require(\"debug\");\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = require(\"fs\");\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _json() {\n  const data = require(\"json5\");\n\n  _json = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"../caching\");\n\nvar _configApi = require(\"../helpers/config-api\");\n\nvar _utils = require(\"./utils\");\n\nvar _moduleTypes = require(\"./module-types\");\n\nvar _patternToRegex = require(\"../pattern-to-regex\");\n\nvar fs = require(\"../../gensync-utils/fs\");\n\nfunction _module() {\n  const data = require(\"module\");\n\n  _module = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst debug = _debug()(\"babel:config:loading:files:configuration\");\n\nconst ROOT_CONFIG_FILENAMES = [\"babel.config.js\", \"babel.config.cjs\", \"babel.config.mjs\", \"babel.config.json\"];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\nconst RELATIVE_CONFIG_FILENAMES = [\".babelrc\", \".babelrc.js\", \".babelrc.cjs\", \".babelrc.mjs\", \".babelrc.json\"];\nconst BABELIGNORE_FILENAME = \".babelignore\";\n\nfunction findConfigUpwards(rootDir) {\n  let dirname = rootDir;\n\n  for (;;) {\n    for (const filename of ROOT_CONFIG_FILENAMES) {\n      if (_fs().existsSync(_path().join(dirname, filename))) {\n        return dirname;\n      }\n    }\n\n    const nextDir = _path().dirname(dirname);\n\n    if (dirname === nextDir) break;\n    dirname = nextDir;\n  }\n\n  return null;\n}\n\nfunction* findRelativeConfig(packageData, envName, caller) {\n  let config = null;\n  let ignore = null;\n\n  const dirname = _path().dirname(packageData.filepath);\n\n  for (const loc of packageData.directories) {\n    if (!config) {\n      var _packageData$pkg;\n\n      config = yield* loadOneConfig(RELATIVE_CONFIG_FILENAMES, loc, envName, caller, ((_packageData$pkg = packageData.pkg) == null ? void 0 : _packageData$pkg.dirname) === loc ? packageToBabelConfig(packageData.pkg) : null);\n    }\n\n    if (!ignore) {\n      const ignoreLoc = _path().join(loc, BABELIGNORE_FILENAME);\n\n      ignore = yield* readIgnoreConfig(ignoreLoc);\n\n      if (ignore) {\n        debug(\"Found ignore %o from %o.\", ignore.filepath, dirname);\n      }\n    }\n  }\n\n  return {\n    config,\n    ignore\n  };\n}\n\nfunction findRootConfig(dirname, envName, caller) {\n  return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);\n}\n\nfunction* loadOneConfig(names, dirname, envName, caller, previousConfig = null) {\n  const configs = yield* _gensync().all(names.map(filename => readConfig(_path().join(dirname, filename), envName, caller)));\n  const config = configs.reduce((previousConfig, config) => {\n    if (config && previousConfig) {\n      throw new Error(`Multiple configuration files found. Please remove one:\\n` + ` - ${_path().basename(previousConfig.filepath)}\\n` + ` - ${config.filepath}\\n` + `from ${dirname}`);\n    }\n\n    return config || previousConfig;\n  }, previousConfig);\n\n  if (config) {\n    debug(\"Found configuration %o from %o.\", config.filepath, dirname);\n  }\n\n  return config;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  const filepath = (((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"8.9\") ? require.resolve : (r, {\n    paths: [b]\n  }, M = require(\"module\")) => {\n    let f = M._findPath(r, M._nodeModulePaths(b).concat(b));\n\n    if (f) return f;\n    f = new Error(`Cannot resolve module '${r}'`);\n    f.code = \"MODULE_NOT_FOUND\";\n    throw f;\n  })(name, {\n    paths: [dirname]\n  });\n  const conf = yield* readConfig(filepath, envName, caller);\n\n  if (!conf) {\n    throw new Error(`Config file ${filepath} contains no configuration data`);\n  }\n\n  debug(\"Loaded config %o from %o.\", name, dirname);\n  return conf;\n}\n\nfunction readConfig(filepath, envName, caller) {\n  const ext = _path().extname(filepath);\n\n  return ext === \".js\" || ext === \".cjs\" || ext === \".mjs\" ? readConfigJS(filepath, {\n    envName,\n    caller\n  }) : readConfigJSON5(filepath);\n}\n\nconst LOADING_CONFIGS = new Set();\nconst readConfigJS = (0, _caching.makeStrongCache)(function* readConfigJS(filepath, cache) {\n  if (!_fs().existsSync(filepath)) {\n    cache.never();\n    return null;\n  }\n\n  if (LOADING_CONFIGS.has(filepath)) {\n    cache.never();\n    debug(\"Auto-ignoring usage of config %o.\", filepath);\n    return {\n      filepath,\n      dirname: _path().dirname(filepath),\n      options: {}\n    };\n  }\n\n  let options;\n\n  try {\n    LOADING_CONFIGS.add(filepath);\n    options = yield* (0, _moduleTypes.default)(filepath, \"You appear to be using a native ECMAScript module configuration \" + \"file, which is only supported when running Babel asynchronously.\");\n  } catch (err) {\n    err.message = `${filepath}: Error while loading config - ${err.message}`;\n    throw err;\n  } finally {\n    LOADING_CONFIGS.delete(filepath);\n  }\n\n  let assertCache = false;\n\n  if (typeof options === \"function\") {\n    yield* [];\n    options = options((0, _configApi.makeConfigAPI)(cache));\n    assertCache = true;\n  }\n\n  if (!options || typeof options !== \"object\" || Array.isArray(options)) {\n    throw new Error(`${filepath}: Configuration should be an exported JavaScript object.`);\n  }\n\n  if (typeof options.then === \"function\") {\n    throw new Error(`You appear to be using an async configuration, ` + `which your current version of Babel does not support. ` + `We may add support for this in the future, ` + `but if you're on the most recent version of @babel/core and still ` + `seeing this error, then you'll need to synchronously return your config.`);\n  }\n\n  if (assertCache && !cache.configured()) throwConfigError();\n  return {\n    filepath,\n    dirname: _path().dirname(filepath),\n    options\n  };\n});\nconst packageToBabelConfig = (0, _caching.makeWeakCacheSync)(file => {\n  const babel = file.options[\"babel\"];\n  if (typeof babel === \"undefined\") return null;\n\n  if (typeof babel !== \"object\" || Array.isArray(babel) || babel === null) {\n    throw new Error(`${file.filepath}: .babel property must be an object`);\n  }\n\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: babel\n  };\n});\nconst readConfigJSON5 = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  let options;\n\n  try {\n    options = _json().parse(content);\n  } catch (err) {\n    err.message = `${filepath}: Error while parsing config - ${err.message}`;\n    throw err;\n  }\n\n  if (!options) throw new Error(`${filepath}: No config detected`);\n\n  if (typeof options !== \"object\") {\n    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);\n  }\n\n  if (Array.isArray(options)) {\n    throw new Error(`${filepath}: Expected config object but found array`);\n  }\n\n  return {\n    filepath,\n    dirname: _path().dirname(filepath),\n    options\n  };\n});\nconst readIgnoreConfig = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  const ignoreDir = _path().dirname(filepath);\n\n  const ignorePatterns = content.split(\"\\n\").map(line => line.replace(/#(.*?)$/, \"\").trim()).filter(line => !!line);\n\n  for (const pattern of ignorePatterns) {\n    if (pattern[0] === \"!\") {\n      throw new Error(`Negation of file paths is not supported.`);\n    }\n  }\n\n  return {\n    filepath,\n    dirname: _path().dirname(filepath),\n    ignore: ignorePatterns.map(pattern => (0, _patternToRegex.default)(pattern, ignoreDir))\n  };\n});\n\nfunction* resolveShowConfigPath(dirname) {\n  const targetPath = process.env.BABEL_SHOW_CONFIG_FOR;\n\n  if (targetPath != null) {\n    const absolutePath = _path().resolve(dirname, targetPath);\n\n    const stats = yield* fs.stat(absolutePath);\n\n    if (!stats.isFile()) {\n      throw new Error(`${absolutePath}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);\n    }\n\n    return absolutePath;\n  }\n\n  return null;\n}\n\nfunction throwConfigError() {\n  throw new Error(`\\\nCaching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured\nfor various types of caching, using the first param of their handler functions:\n\nmodule.exports = function(api) {\n  // The API exposes the following:\n\n  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n  api.cache.never();   // api.cache(false)\n  api.cache.using(fn); // api.cache(fn)\n\n  // Return the value that will be cached.\n  return { };\n};`);\n}"],"file":"configuration.js"}