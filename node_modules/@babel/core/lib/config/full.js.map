{"version":3,"sources":["../../../../../../node_modules/@babel/core/lib/config/full.js"],"names":["Object","value","exports","data","require","_gensync","_async","_util","context","_plugin","_item","_configChain","_traverse","_caching","_options","_plugins","_configApi","_partial","Context","_default","result","fileHandling","optionDefaults","presets","presetContext","targets","options","toDescriptor","item","desc","presetsDescriptors","initialPluginsDescriptors","plugins","pluginDescriptorsByPass","passes","ignored","i","rawPresets","descriptor","preset","loadPresetDescriptor","pass","pluginDescriptorsPass","e","o","p","recursePresetDescriptors","opts","pluginContext","assumptions","_opts$assumptions","descs","loadPluginDescriptor","fn","makeDescriptorLoader","apiFactory","alias","factory","api","JSON","pluginDescriptorLoader","presetDescriptorLoader","instantiatePlugin","pluginObj","plugin","inheritsDescriptor","name","dirname","inherits","run","cache","chain","validateIfOptionNeedsFilename","formattedPresetName","validatePreset","overrideOptions","instantiatePreset","fns"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _async = require(\"../gensync-utils/async\");\n\nvar _util = require(\"./util\");\n\nvar context = require(\"../index\");\n\nvar _plugin = require(\"./plugin\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"./caching\");\n\nvar _options = require(\"./validation/options\");\n\nvar _plugins = require(\"./validation/plugins\");\n\nvar _configApi = require(\"./helpers/config-api\");\n\nvar _partial = require(\"./partial\");\n\nvar Context = require(\"./cache-contexts\");\n\nvar _default = _gensync()(function* loadFullConfig(inputOpts) {\n  var _opts$assumptions;\n\n  const result = yield* (0, _partial.default)(inputOpts);\n\n  if (!result) {\n    return null;\n  }\n\n  const {\n    options,\n    context,\n    fileHandling\n  } = result;\n\n  if (fileHandling === \"ignored\") {\n    return null;\n  }\n\n  const optionDefaults = {};\n  const {\n    plugins,\n    presets\n  } = options;\n\n  if (!plugins || !presets) {\n    throw new Error(\"Assertion failure - plugins and presets exist\");\n  }\n\n  const presetContext = Object.assign({}, context, {\n    targets: options.targets\n  });\n\n  const toDescriptor = item => {\n    const desc = (0, _item.getItemDescriptor)(item);\n\n    if (!desc) {\n      throw new Error(\"Assertion failure - must be config item\");\n    }\n\n    return desc;\n  };\n\n  const presetsDescriptors = presets.map(toDescriptor);\n  const initialPluginsDescriptors = plugins.map(toDescriptor);\n  const pluginDescriptorsByPass = [[]];\n  const passes = [];\n  const ignored = yield* enhanceError(context, function* recursePresetDescriptors(rawPresets, pluginDescriptorsPass) {\n    const presets = [];\n\n    for (let i = 0; i < rawPresets.length; i++) {\n      const descriptor = rawPresets[i];\n\n      if (descriptor.options !== false) {\n        try {\n          if (descriptor.ownPass) {\n            presets.push({\n              preset: yield* loadPresetDescriptor(descriptor, presetContext),\n              pass: []\n            });\n          } else {\n            presets.unshift({\n              preset: yield* loadPresetDescriptor(descriptor, presetContext),\n              pass: pluginDescriptorsPass\n            });\n          }\n        } catch (e) {\n          if (e.code === \"BABEL_UNKNOWN_OPTION\") {\n            (0, _options.checkNoUnwrappedItemOptionPairs)(rawPresets, i, \"preset\", e);\n          }\n\n          throw e;\n        }\n      }\n    }\n\n    if (presets.length > 0) {\n      pluginDescriptorsByPass.splice(1, 0, ...presets.map(o => o.pass).filter(p => p !== pluginDescriptorsPass));\n\n      for (const {\n        preset,\n        pass\n      } of presets) {\n        if (!preset) return true;\n        pass.push(...preset.plugins);\n        const ignored = yield* recursePresetDescriptors(preset.presets, pass);\n        if (ignored) return true;\n        preset.options.forEach(opts => {\n          (0, _util.mergeOptions)(optionDefaults, opts);\n        });\n      }\n    }\n  })(presetsDescriptors, pluginDescriptorsByPass[0]);\n  if (ignored) return null;\n  const opts = optionDefaults;\n  (0, _util.mergeOptions)(opts, options);\n  const pluginContext = Object.assign({}, presetContext, {\n    assumptions: (_opts$assumptions = opts.assumptions) != null ? _opts$assumptions : {}\n  });\n  yield* enhanceError(context, function* loadPluginDescriptors() {\n    pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);\n\n    for (const descs of pluginDescriptorsByPass) {\n      const pass = [];\n      passes.push(pass);\n\n      for (let i = 0; i < descs.length; i++) {\n        const descriptor = descs[i];\n\n        if (descriptor.options !== false) {\n          try {\n            pass.push(yield* loadPluginDescriptor(descriptor, pluginContext));\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_PLUGIN_PROPERTY\") {\n              (0, _options.checkNoUnwrappedItemOptionPairs)(descs, i, \"plugin\", e);\n            }\n\n            throw e;\n          }\n        }\n      }\n    }\n  })();\n  opts.plugins = passes[0];\n  opts.presets = passes.slice(1).filter(plugins => plugins.length > 0).map(plugins => ({\n    plugins\n  }));\n  opts.passPerPreset = opts.presets.length > 0;\n  return {\n    options: opts,\n    passes: passes\n  };\n});\n\nexports.default = _default;\n\nfunction enhanceError(context, fn) {\n  return function* (arg1, arg2) {\n    try {\n      return yield* fn(arg1, arg2);\n    } catch (e) {\n      if (!/^\\[BABEL\\]/.test(e.message)) {\n        e.message = `[BABEL] ${context.filename || \"unknown\"}: ${e.message}`;\n      }\n\n      throw e;\n    }\n  };\n}\n\nconst makeDescriptorLoader = apiFactory => (0, _caching.makeWeakCache)(function* ({\n  value,\n  options,\n  dirname,\n  alias\n}, cache) {\n  if (options === false) throw new Error(\"Assertion failure\");\n  options = options || {};\n  let item = value;\n\n  if (typeof value === \"function\") {\n    const factory = (0, _async.maybeAsync)(value, `You appear to be using an async plugin/preset, but Babel has been called synchronously`);\n    const api = Object.assign({}, context, apiFactory(cache));\n\n    try {\n      item = yield* factory(api, options, dirname);\n    } catch (e) {\n      if (alias) {\n        e.message += ` (While processing: ${JSON.stringify(alias)})`;\n      }\n\n      throw e;\n    }\n  }\n\n  if (!item || typeof item !== \"object\") {\n    throw new Error(\"Plugin/Preset did not return an object.\");\n  }\n\n  if ((0, _async.isThenable)(item)) {\n    yield* [];\n    throw new Error(`You appear to be using a promise as a plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version. ` + `As an alternative, you can prefix the promise with \"await\". ` + `(While processing: ${JSON.stringify(alias)})`);\n  }\n\n  return {\n    value: item,\n    options,\n    dirname,\n    alias\n  };\n});\n\nconst pluginDescriptorLoader = makeDescriptorLoader(_configApi.makePluginAPI);\nconst presetDescriptorLoader = makeDescriptorLoader(_configApi.makePresetAPI);\n\nfunction* loadPluginDescriptor(descriptor, context) {\n  if (descriptor.value instanceof _plugin.default) {\n    if (descriptor.options) {\n      throw new Error(\"Passed options to an existing Plugin instance will not work.\");\n    }\n\n    return descriptor.value;\n  }\n\n  return yield* instantiatePlugin(yield* pluginDescriptorLoader(descriptor, context), context);\n}\n\nconst instantiatePlugin = (0, _caching.makeWeakCache)(function* ({\n  value,\n  options,\n  dirname,\n  alias\n}, cache) {\n  const pluginObj = (0, _plugins.validatePluginObject)(value);\n  const plugin = Object.assign({}, pluginObj);\n\n  if (plugin.visitor) {\n    plugin.visitor = _traverse().default.explode(Object.assign({}, plugin.visitor));\n  }\n\n  if (plugin.inherits) {\n    const inheritsDescriptor = {\n      name: undefined,\n      alias: `${alias}$inherits`,\n      value: plugin.inherits,\n      options,\n      dirname\n    };\n    const inherits = yield* (0, _async.forwardAsync)(loadPluginDescriptor, run => {\n      return cache.invalidate(data => run(inheritsDescriptor, data));\n    });\n    plugin.pre = chain(inherits.pre, plugin.pre);\n    plugin.post = chain(inherits.post, plugin.post);\n    plugin.manipulateOptions = chain(inherits.manipulateOptions, plugin.manipulateOptions);\n    plugin.visitor = _traverse().default.visitors.merge([inherits.visitor || {}, plugin.visitor || {}]);\n  }\n\n  return new _plugin.default(plugin, options, alias);\n});\n\nconst validateIfOptionNeedsFilename = (options, descriptor) => {\n  if (options.test || options.include || options.exclude) {\n    const formattedPresetName = descriptor.name ? `\"${descriptor.name}\"` : \"/* your preset */\";\n    throw new Error([`Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`, `\\`\\`\\``, `babel.transform(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`, `\\`\\`\\``, `See https://babeljs.io/docs/en/options#filename for more information.`].join(\"\\n\"));\n  }\n};\n\nconst validatePreset = (preset, context, descriptor) => {\n  if (!context.filename) {\n    const {\n      options\n    } = preset;\n    validateIfOptionNeedsFilename(options, descriptor);\n\n    if (options.overrides) {\n      options.overrides.forEach(overrideOptions => validateIfOptionNeedsFilename(overrideOptions, descriptor));\n    }\n  }\n};\n\nfunction* loadPresetDescriptor(descriptor, context) {\n  const preset = instantiatePreset(yield* presetDescriptorLoader(descriptor, context));\n  validatePreset(preset, context, descriptor);\n  return yield* (0, _configChain.buildPresetChain)(preset, context);\n}\n\nconst instantiatePreset = (0, _caching.makeWeakCacheSync)(({\n  value,\n  dirname,\n  alias\n}) => {\n  return {\n    options: (0, _options.validate)(\"preset\", value),\n    alias,\n    dirname\n  };\n});\n\nfunction chain(a, b) {\n  const fns = [a, b].filter(Boolean);\n  if (fns.length <= 1) return fns[0];\n  return function (...args) {\n    for (const fn of fns) {\n      fn.apply(this, args);\n    }\n  };\n}"],"file":"full.js"}