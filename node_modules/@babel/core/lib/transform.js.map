{"version":3,"sources":["../../../../../node_modules/@babel/core/lib/transform.js"],"names":["Object","value","exports","data","require","_gensync","_config","_transformation","transformRunner","config","transform","callback","opts","transformSync","transformAsync"],"mappings":"AAAA;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7CD;AAGAE,OAAO,CAAPA,cAAAA,GAAyBA,OAAO,CAAPA,aAAAA,GAAwBA,OAAO,CAAPA,SAAAA,GAAoB,KAArEA,CAAAA;;AAEA,SAAA,QAAA,GAAoB;AAClB,QAAMC,IAAI,GAAGC,OAAO,CAApB,SAAoB,CAApB;;AAEAC,EAAAA,QAAQ,GAAG,YAAY;AACrB,WAAA,IAAA;AADFA,GAAAA;;AAIA,SAAA,IAAA;AACD;;AAED,IAAIC,OAAO,GAAGF,OAAO,CAArB,UAAqB,CAArB;;AAEA,IAAIG,eAAe,GAAGH,OAAO,CAA7B,kBAA6B,CAA7B;;AAEA,MAAMI,eAAe,GAAGH,QAAQ,GAAG,UAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAgC;AACjE,QAAMI,MAAM,GAAG,OAAO,CAAC,GAAGH,OAAO,CAAX,OAAA,EAAtB,IAAsB,CAAtB;AACA,MAAIG,MAAM,KAAV,IAAA,EAAqB,OAAA,IAAA;AACrB,SAAO,OAAO,CAAC,GAAGF,eAAe,CAAnB,GAAA,EAAA,MAAA,EAAd,IAAc,CAAd;AAHF,CAAgC,CAAhC;;AAMA,MAAMG,SAAS,GAAG,SAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAyC;AACzD,MAAI,OAAA,IAAA,KAAJ,UAAA,EAAgC;AAC9BC,IAAAA,QAAQ,GAARA,IAAAA;AACAC,IAAAA,IAAI,GAAJA,SAAAA;AACD;;AAED,MAAID,QAAQ,KAAZ,SAAA,EAA4B,OAAOH,eAAe,CAAfA,IAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AAC5BA,EAAAA,eAAe,CAAfA,OAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,QAAAA;AAPF,CAAA;;AAUAN,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;AACA,MAAMW,aAAa,GAAGL,eAAe,CAArC,IAAA;AACAN,OAAO,CAAPA,aAAAA,GAAAA,aAAAA;AACA,MAAMY,cAAc,GAAGN,eAAe,CAAtC,KAAA;AACAN,OAAO,CAAPA,cAAAA,GAAAA,cAAAA","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformAsync = exports.transformSync = exports.transform = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nconst transformRunner = _gensync()(function* transform(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n  if (config === null) return null;\n  return yield* (0, _transformation.run)(config, code);\n});\n\nconst transform = function transform(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) return transformRunner.sync(code, opts);\n  transformRunner.errback(code, opts, callback);\n};\n\nexports.transform = transform;\nconst transformSync = transformRunner.sync;\nexports.transformSync = transformSync;\nconst transformAsync = transformRunner.async;\nexports.transformAsync = transformAsync;"],"file":"transform.js"}