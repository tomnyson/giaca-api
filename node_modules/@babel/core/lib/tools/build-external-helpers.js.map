{"version":3,"sources":["../../../../../../node_modules/@babel/core/lib/tools/build-external-helpers.js"],"names":["Object","value","exports","data","require","helpers","_generator","_template","_t","_file","variableDeclarator","buildUmdWrapper","replacements","statement","namespace","identifier","body","container","functionExpression","blockStatement","tree","program","expressionStatement","callExpression","conditionalExpression","binaryExpression","unaryExpression","stringLiteral","variableDeclaration","assignmentExpression","memberExpression","objectExpression","buildHelpers","refs","exportNamedDeclaration","name","exportSpecifier","cloneNode","FACTORY_PARAMETERS","BROWSER_ARGUMENTS","COMMON_ARGUMENTS","AMD_ARGUMENTS","arrayExpression","FACTORY_BODY","UMD_ROOT","getHelperReference","allowlist","ref","nodes","outputType","build","global","module","umd","var","buildVar"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction helpers() {\n  const data = require(\"@babel/helpers\");\n\n  helpers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = require(\"@babel/generator\");\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _template() {\n  const data = require(\"@babel/template\");\n\n  _template = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = require(\"../transformation/file/file\");\n\nconst {\n  arrayExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  conditionalExpression,\n  exportNamedDeclaration,\n  exportSpecifier,\n  expressionStatement,\n  functionExpression,\n  identifier,\n  memberExpression,\n  objectExpression,\n  program,\n  stringLiteral,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t();\n\nconst buildUmdWrapper = replacements => _template().default.statement`\n    (function (root, factory) {\n      if (typeof define === \"function\" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === \"object\") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  `(replacements);\n\nfunction buildGlobal(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  const container = functionExpression(null, [identifier(\"global\")], blockStatement(body));\n  const tree = program([expressionStatement(callExpression(container, [conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", identifier(\"global\")), stringLiteral(\"undefined\")), identifier(\"self\"), identifier(\"global\"))]))]);\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, assignmentExpression(\"=\", memberExpression(identifier(\"global\"), namespace), objectExpression([])))]));\n  buildHelpers(body, namespace, allowlist);\n  return tree;\n}\n\nfunction buildModule(allowlist) {\n  const body = [];\n  const refs = buildHelpers(body, null, allowlist);\n  body.unshift(exportNamedDeclaration(null, Object.keys(refs).map(name => {\n    return exportSpecifier(cloneNode(refs[name]), identifier(name));\n  })));\n  return program(body, [], \"module\");\n}\n\nfunction buildUmd(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, identifier(\"global\"))]));\n  buildHelpers(body, namespace, allowlist);\n  return program([buildUmdWrapper({\n    FACTORY_PARAMETERS: identifier(\"global\"),\n    BROWSER_ARGUMENTS: assignmentExpression(\"=\", memberExpression(identifier(\"root\"), namespace), objectExpression([])),\n    COMMON_ARGUMENTS: identifier(\"exports\"),\n    AMD_ARGUMENTS: arrayExpression([stringLiteral(\"exports\")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: identifier(\"this\")\n  })]);\n}\n\nfunction buildVar(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, objectExpression([]))]));\n  const tree = program(body);\n  buildHelpers(body, namespace, allowlist);\n  body.push(expressionStatement(namespace));\n  return tree;\n}\n\nfunction buildHelpers(body, namespace, allowlist) {\n  const getHelperReference = name => {\n    return namespace ? memberExpression(namespace, identifier(name)) : identifier(`_${name}`);\n  };\n\n  const refs = {};\n  helpers().list.forEach(function (name) {\n    if (allowlist && allowlist.indexOf(name) < 0) return;\n    const ref = refs[name] = getHelperReference(name);\n    helpers().ensure(name, _file.default);\n    const {\n      nodes\n    } = helpers().get(name, getHelperReference, ref);\n    body.push(...nodes);\n  });\n  return refs;\n}\n\nfunction _default(allowlist, outputType = \"global\") {\n  let tree;\n  const build = {\n    global: buildGlobal,\n    module: buildModule,\n    umd: buildUmd,\n    var: buildVar\n  }[outputType];\n\n  if (build) {\n    tree = build(allowlist);\n  } else {\n    throw new Error(`Unsupported output type ${outputType}`);\n  }\n\n  return (0, _generator().default)(tree).code;\n}"],"file":"build-external-helpers.js"}