{"version":3,"sources":["../../../../../../../node_modules/@babel/core/node_modules/debug/src/browser.js"],"names":["exports","localstorage","warned","console","window","navigator","document","parseInt","RegExp","args","module","c","index","lastC","match","r","process","require","formatters","JSON","error"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\nexports.destroy = (() => {\n  let warned = false;\n  return () => {\n    if (!warned) {\n      warned = true;\n      console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n    }\n  };\n})();\n/**\n * Colors.\n */\n\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  const c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  let index = 0;\n  let lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, match => {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\n\n\nexports.log = console.debug || console.log || (() => {});\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  let r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  } // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nconst {\n  formatters\n} = module.exports;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};"],"file":"browser.js"}